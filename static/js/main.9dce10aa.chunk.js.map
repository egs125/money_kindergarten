{"version":3,"sources":["fBase.js","modules/userInfo.js","components/NavBar.js","containers/HomeContainer.js","components/Auth.js","containers/AuthContainer.js","modules/wishInfo.js","share/common.js","share/FloatingAddBtn.js","components/WishList.js","containers/WishListContainer.js","modules/incomeInfo.js","components/IncomeList.js","containers/IncomeContainer.js","containers/ExpenseContainer.js","components/ItemDetail.js","containers/ItemDetailContainer.js","share/ToastMessage.js","router/AppRouter.js","App.js","modules/moneyInfo.js","modules/index.js","index.js"],"names":["moneyKindergarten","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","dbService","firestore","rsf","ReduxSagaFirebase","registerNewAccountSaga","loginSaga","logoutSaga","setErrorMsgSaga","userInfoSaga","REGISTER","LOGIN","LOGOUT","SET_USER_LOGIN","SET_USER_LOGOUT","FAIL","FAIL_ON_VALIDATION","SET_ERROR_MSG","setErrorMsg","msg","type","action","obj","email","password","call","auth","createUserWithEmailAndPassword","user","put","message","signInWithEmailAndPassword","signOut","takeEvery","initialState","isLoggedIn","userObj","authMsg","isError","NavBar","history","useHistory","dispatch","useDispatch","useState","openDrawer","setOpenDrawer","useSelector","state","userInfo","toggleDrawer","onMovePage","page","push","className","IconButton","onClick","Close","Menu","MonetizationOn","List","ListItem","button","Divider","HomeContaier","wishList","wishInfo","Auth","isOnRegister","toggleRegisterProcess","onChangeValue","onPressKey","handleLogin","onClickRegisterBtn","ChildCare","fontSize","LocalAtm","TextField","name","label","required","value","onChange","onKeyPress","id","Button","variant","color","size","AuthContainer","setIsOnRegister","setEmail","setPassword","onRegister","registerNewAccount","onLogin","login","checkValidation","isValid","e","target","charCode","document","querySelector","focus","readWishListSaga","registerNewWishSaga","deleteWishSaga","updateWishSaga","wishInfoSaga","READ","DELETE","UPDATE","SET_WISH_LIST","SUCCESS","readWishList","registerNewWish","updateWish","userEmail","month","a","collection","doc","orderBy","get","wishRefs","docs","tempArr","forEach","exists","data","console","log","item","curYm","add","then","result","catch","error","delete","update","wishMsg","called","trimMonth","substr","addComma","number","toString","replace","FloatingAddBtn","movePage","style","WishList","curWishList","actionHandler","showDelBtn","deleteWishList","onEventHandler","Array","isArray","map","index","draggable","onTouchStart","onTouchEnd","itemName","cm","itemPrice","Delete","WishListContainer","location","useLocation","moment","format","curYear","setCurYear","curMonth","setCurMonth","setCurWishList","totalWishAmount","setTotalWishAmount","setShowDelBtn","x","y","touchPosition","setTouchPosition","onClickArrowBtn","flag","newlySelectedMonth","subtract","useSwipeable","onTap","onSwipedLeft","getWishList","useCallback","setWishList","totalAmount","reduce","sum","setData","useEffect","targetMonth","split","tempYear","tempMonth","undefined","ArrowBackIos","ArrowForwardIos","changedTouches","pageX","pageY","xPos","yPos","selectedItem","find","pathname","actionType","targetItem","updateWishList","distanceX","Math","abs","distanceY","readIncomeListSaga","registerNewIncomeSaga","deleteIncomeSaga","updateIncomeSaga","incomeInfoSaga","SET_INCOME_LIST","readIncomeList","incomeRefs","incomeList","incomeMsg","IncomeList","IncomeContainer","incomeInfo","curIncomeList","setCurIncomeList","totalIncomeAmount","setTotalIncomeAmount","getIncomeList","setIncomeList","deleteIncomeList","ExpenseContainer","ItemDetail","onChangeItem","onClickPrevBtn","onClickSubmitBtn","priority","remark","ItemDetailContainer","setItem","mapActions","wishActionMap","Map","mapParamObj","paramObj","typeText","actionText","mapPageTitle","newValue","Number","param","ToastMessage","openAlert","setOpenAlert","alertMessage","setAlertMessage","alertType","setAlertType","Snackbar","open","autoHideDuration","onClose","severity","elevation","AppRouter","basename","exact","path","HomeContainer","to","App","rootSaga","all","rootReducer","combineReducers","moneyInfo","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9dce10aa.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport ReduxSagaFirebase from 'redux-saga-firebase'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst moneyKindergarten = firebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const rsf = new ReduxSagaFirebase(moneyKindergarten);\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { rsf } from \"../fBase\";\n\n// Action types\nconst REGISTER = 'userInfo/REGISTER';\nconst LOGIN = 'userInfo/LOGIN';\nconst LOGOUT = 'userInfo/LOGOUT';\nconst SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\nconst SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\nconst FAIL = 'userInfo/FAIL';\nconst FAIL_ON_VALIDATION = 'userInfo/FAIL_ON_VALIDATION';\nconst SET_ERROR_MSG = 'userInfo/SET_ERROR_MSG';\n\n// Action creators\nexport const registerNewAccount = obj => ({ type: REGISTER, obj });\nexport const login = obj => ({ type: LOGIN, obj });\nexport const logout = () => ({ type: LOGOUT });\nexport const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\nexport const setUserLogout = () => ({ type: SET_USER_LOGOUT });\nexport const setErrorMsg = msg => ({ type: SET_ERROR_MSG, msg });\n\n// saga\nfunction* registerNewAccountSaga(action) {  \n  try {\n    const { email, password } = action.obj;\n    const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n    yield put({ type: SET_USER_LOGIN, user });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* loginSaga(action) {\n  try {\n    const { email, password } = action.obj;\n    const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n    yield put({ type: SET_USER_LOGIN, user });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(rsf.auth.signOut);\n    yield put({ type: SET_USER_LOGOUT });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* setErrorMsgSaga(action) {\n  yield put({ type: FAIL_ON_VALIDATION, msg: action.msg });\n}\n\nexport function* userInfoSaga() {\n  yield takeEvery(REGISTER, registerNewAccountSaga);\n  yield takeEvery(LOGIN, loginSaga);\n  yield takeEvery(LOGOUT, logoutSaga);\n  yield takeEvery(SET_ERROR_MSG, setErrorMsgSaga);\n}\n\n// initial states\nconst initialState = {\n  isLoggedIn: false,\n  userObj: {},\n  authMsg: { msg: '', isError: false },\n};\n\n// reducers\nexport default function UserInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case LOGIN:\n      return state;\n    case LOGOUT:\n      return state;\n    case SET_USER_LOGIN:\n      return {\n        isLoggedIn: true,\n        userObj: action.user,\n        authMsg: { msg: '', isError: false },\n      };\n    case SET_USER_LOGOUT:\n      return {\n        isLoggedIn: false,\n        userObj: {},\n        authMsg: { msg: '', isError: false },\n      };\n    case FAIL:\n      return {\n        authMsg: { msg: action.msg, isError: true },\n      };\n    case SET_ERROR_MSG:\n      return state;\n    case FAIL_ON_VALIDATION:\n      return {\n        authMsg: { msg: action.msg, isError: true },\n      };\n    default:\n      return state;\n  }\n};","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, List, ListItem, Divider } from '@material-ui/core';\nimport { Menu, Close, MonetizationOn } from '@material-ui/icons';\nimport { logout } from '../modules/userInfo';\n\nconst NavBar = () => {\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  \n  const { isLoggedIn } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n  }));\n\n  const toggleDrawer = () => {\n    setOpenDrawer(!openDrawer);\n  };\n\n  const onMovePage = (page) => {\n    toggleDrawer();\n    history.push(`/${page}`);\n  };\n\n  const onLogout = () => {\n    toggleDrawer();\n    dispatch(logout());\n  }\n\n  return (\n    <>\n      <nav className=\"nav-container\">\n        {isLoggedIn ? (\n          <IconButton onClick={toggleDrawer}>\n          {openDrawer ? (\n            <Close />\n          ) : (\n            <Menu />\n          )}\n        </IconButton>\n        ) : (\n          <IconButton>\n            <MonetizationOn />\n          </IconButton>\n        )}\n        <span className=\"app-title\">재린이 유치원</span>\n      </nav>\n      {openDrawer && (\n        <div className=\"nav-drawer\">\n          <List>\n            <ListItem\n              button\n              onClick={() => onMovePage('')}\n            >\n              <span>요약</span>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => onMovePage('wishList')}\n            >\n              <span>장바구니</span>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => onMovePage('expense')}\n            >\n              <span>지출</span>\n            </ListItem>\n            <ListItem\n              button\n              className=\"nav-drawer-last-item\"\n              onClick={() => onMovePage('income')}\n            >\n              <span>수입</span>\n            </ListItem>\n            {isLoggedIn && (\n              <>\n                <Divider />\n                <ListItem button onClick={onLogout}><span>로그아웃</span></ListItem>\n              </>\n            )}\n          </List>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nconst HomeContaier = () => {\n  const dispatch = useDispatch();\n  \n  const { userObj, wishList } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n    wishList: state.wishInfo.wishList,\n  }));\n\n  return (\n    <div>\n      Home!\n    </div>\n  );\n};\n\nexport default HomeContaier;\n","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { ChildCare, LocalAtm } from '@material-ui/icons';\n\nconst Auth = ({\n  isOnRegister,\n  email, password,\n  toggleRegisterProcess, onChangeValue,\n  onPressKey, handleLogin, onClickRegisterBtn,\n}) => (\n  <div className=\"auth-container\">\n\n    <div className=\"icon-area\">\n      <ChildCare fontSize=\"large\" />\n      <LocalAtm fontSize=\"large\" />\n      <ChildCare fontSize=\"large\" />\n    </div>\n\n    <div className=\"input-area\">\n      <TextField\n        name=\"email\"\n        type=\"text\"\n        label=\"Email address\"\n        required\n        value={email}\n        onChange={onChangeValue}\n        onKeyPress={onPressKey}\n      />\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        label=\"password\"\n        required\n        value={password}\n        onChange={onChangeValue}\n        onKeyPress={onPressKey}\n      />\n    </div>\n\n    <div className=\"btn-area\">\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        onClick={isOnRegister ? onClickRegisterBtn : handleLogin}\n      >\n        {isOnRegister ? '신규 등록' : '로그인'}\n      </Button>\n      <div className=\"spacing-area\" />\n      <Button\n        variant=\"contained\"\n        color=\"default\"\n        size=\"large\"\n        onClick={toggleRegisterProcess}\n      >\n        {isOnRegister ? '취소' : '계정 생성'}\n      </Button>\n    </div>\n  </div>\n);\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerNewAccount, login, setErrorMsg } from 'modules/userInfo';\nimport Auth from 'components/Auth';\n\nconst AuthContainer = () => {\n\n  const dispatch = useDispatch();\n\n  const [isOnRegister, setIsOnRegister] = useState(false);  // 신규등록/로그인 전환\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onRegister = obj => dispatch(registerNewAccount(obj));\n  const onLogin = obj => dispatch(login(obj));\n\n  const toggleRegisterProcess = () => setIsOnRegister(!isOnRegister);\n\n  // 이메일/비밀번호 입력창 변경 이벤트 핸들러\n  const onChangeValue = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  // 엔터키 입력 이벤트 핸들러\n  const onPressKey = e => {\n    const { charCode, target: { name } } = e;\n    \n    if (charCode === 13) { \n      if (name === 'email') {    \n        const target = document.querySelector('#password');\n        if (target) {\n          target.focus();\n        }\n      } else if (name === 'password') {\n        handleLogin();\n      }\n    } \n  };\n\n  // 정합성 체크\n  const checkValidation = () => {\n    let isValid = true;\n    if (email === '') {\n      dispatch(setErrorMsg('이메일 주소를 입력해주세요'));\n      isValid = false;\n    } else if (password === '') {\n      dispatch(setErrorMsg('비밀번호를 입력해주세요'));\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  // 로그인 이벤트 핸들러\n  const handleLogin = () => {\n    const isValid = checkValidation();\n\n    if (isValid) {\n      onLogin({ email, password });\n    }\n  };\n\n  // 신규 등록 버튼 클릭 이벤트 핸들러\n  const onClickRegisterBtn = () => {\n    const isValid = checkValidation();\n\n    if (isValid) {\n      onRegister({ email, password });\n    }\n  };\n\n  return (\n    <>\n      <Auth\n        isOnRegister={isOnRegister}\n        email={email}\n        password={password}\n        toggleRegisterProcess={toggleRegisterProcess}\n        onChangeValue={onChangeValue}\n        onPressKey={onPressKey}\n        handleLogin={handleLogin}\n        onClickRegisterBtn={onClickRegisterBtn}\n      />\n    </>\n  );\n\n};\n\nexport default AuthContainer;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'wishInfo/READ';\nconst REGISTER = 'wishInfo/REGISTER';\nconst DELETE = 'wishInfo/DELETE';\nconst UPDATE = 'wishInfo/UPDATE';\nconst SET_WISH_LIST = 'wishList/SET_WISH_LIST';\nconst SUCCESS = 'wishList/SUCCESS';\nconst FAIL = 'wishList/FAIL';\n\n// Action creators\nexport const readWishList = obj => ({ type: READ, ...obj });\nexport const registerNewWish = obj => ({ type: REGISTER, obj });\nexport const deleteWish = obj => ({ type: DELETE, obj });\nexport const updateWish = obj => ({ type: UPDATE, obj });\n\n// saga\nfunction* readWishListSaga(action) {\n  try {\n    const { userEmail, month } = action;\n\n    const wishList = yield call(async () => {\n      const wishRefs = await dbService.collection('wishlists')\n        .doc(userEmail).collection(month).orderBy('priority', 'asc').get();\n      \n      const { docs } = wishRefs;\n\n      if (docs) {\n        const tempArr = [];\n\n        docs.forEach(doc => {\n          if (doc.exists) {\n            tempArr.push({ id: doc.id, ...doc.data() });\n          }\n        });\n\n        return tempArr;\n      }\n    });\n\n    yield put({ type: SET_WISH_LIST, wishList, month });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* registerNewWishSaga(action) {\n  try {\n    const { userEmail, item, curYm } = action.obj;\n\n    const result = yield call(async () => {\n      return dbService.collection('wishlists')\n        .doc(userEmail).collection(curYm).add(item)\n        .then(result => {\n          return result;\n        })\n        .catch(error => {\n          console.log(error);\n          return null;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '등록했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* deleteWishSaga(action) {\n  try {\n    const { obj: { userEmail, month, id } } = action;\n\n    const result = yield call(async () => {\n      return dbService.collection('wishlists')\n        .doc(userEmail).collection(month).doc(id).delete()\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '삭제했습니다!' });\n      yield put({ type: READ, userEmail: userEmail, month: month });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n    \n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* updateWishSaga(action) {\n  try {\n    const { userEmail, item, curYm } = action.obj;\n    \n    const result = yield call(async () => {\n      return dbService.collection('wishlists')\n        .doc(userEmail).collection(curYm).doc(item.id).update({ ...item })\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '수정했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* wishInfoSaga() {\n  yield takeEvery(REGISTER, registerNewWishSaga);\n  yield takeEvery(READ, readWishListSaga);\n  yield takeEvery(DELETE, deleteWishSaga);\n  yield takeEvery(UPDATE, updateWishSaga);\n}\n\n// initial states\nconst initialState = {\n  wishList: [],\n  wishMsg: { msg: '', isError: false },\n  called: '',\n};\n\n// reducers\nexport default function wishInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case READ:\n      return state;\n    case DELETE:\n      return state;\n    case UPDATE:\n      return state;\n    case SET_WISH_LIST:\n      return {\n        wishList: action.wishList,\n        called: action.month,\n      };\n    case SUCCESS:\n      return {\n        wishMsg: { msg: action.msg, isError: false },       \n      };\n    case FAIL:\n      return {\n        wishMsg: { msg: action.msg, isError: true },       \n      };\n    default:\n      return state;\n  }\n};","\nexport function trimMonth(month) {\n  let result = '';\n\n  if (month) {\n    result = month.substr(0, 1) === '0' ? month.substr(1, 1) : month;\n  }\n\n  return result;\n};\n\nexport function addComma(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import React from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst FloatingAddBtn = ({ movePage }) => {\n  return (\n    <div className=\"floating-btn\" onClick={movePage}>\n      <AddCircleIcon color=\"primary\" style={{ fontSize: 50 }} />\n    </div>\n  );\n};\n\nexport default FloatingAddBtn;\n","\n\nimport React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport * as cm from 'share/common';\n\nconst WishList = ({\n  curWishList,\n  actionHandler,\n  showDelBtn,\n  deleteWishList,\n  onEventHandler\n}) => (\n  <>\n    <div className=\"item-list-container\">\n    { Array.isArray(curWishList) &&\n      curWishList.map((item, index) =>\n        <div key={index} id={item.id} className=\"item-info-container\" >\n          <div\n            className={`item-info${showDelBtn === item.id ? '-deletable' : ''}`}\n            draggable\n            // onClick={e => onEventHandler(e, item.id)}\n            // onDoubleClick={e => onEventHandler(e, item.id)}\n            onTouchStart={e => onEventHandler(e, item.id)}\n            onTouchEnd={e => onEventHandler(e, item.id)}\n            {...actionHandler}\n          >\n            <div>\n              {item.itemName}\n            </div>\n            <div>\n              {`${cm.addComma(item.itemPrice)}원`}\n            </div>\n          </div>\n\n          {showDelBtn && showDelBtn === item.id && (\n            <div className=\"icon\">\n              <IconButton onClick={() => deleteWishList(item.id)}>\n                <Delete />\n              </IconButton>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  </>\n);\n\nexport default WishList;","import React, { useEffect, useState, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useSwipeable } from 'react-swipeable';\nimport { readWishList, deleteWish } from 'modules/wishInfo';\nimport * as cm from 'share/common';\nimport FloatingAddBtn from 'share/FloatingAddBtn';\nimport WishList from 'components/WishList';\nimport { IconButton } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\n\nconst WishListContainer = () => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const { userObj, wishList, called } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n    wishList: state.wishInfo.wishList,\n    called: state.wishInfo.called,\n  }));\n  \n  const [curYear, setCurYear] = useState(moment().format('YYYY'));\n  const [curMonth, setCurMonth] = useState(moment().format('MM'));\n  const [curWishList, setCurWishList] = useState([]);\n  const [totalWishAmount, setTotalWishAmount] = useState(0);\n  const [showDelBtn, setShowDelBtn] = useState(false);\n  const [touchPosition, setTouchPosition] = useState({ x: '', y: '' });\n\n  // 상단 화살표 버튼 클릭 이벤트 핸들러\n  const onClickArrowBtn = flag => {\n    let newlySelectedMonth = '';\n\n    if (flag === 'prev') {\n      // 왼쪽 화살표 클릭 시 이전달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).subtract(1, 'months');\n    } else {\n      // 오른쪽 화살표 클릭 시 다음달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).add(1, 'months');\n    }\n    \n    setCurYear(moment(newlySelectedMonth).format('YYYY'));\n    setCurMonth(moment(newlySelectedMonth).format('MM'));\n  };\n\n  // 추가 버튼 클릭 이벤트 핸들러\n  const moveToAddWishList = () => {\n    history.push({\n      pathname: '/add',\n      state: { type: 'wishList', actionType: 'add', targetMonth: `${curYear}-${curMonth}` },\n    });\n  };\n\n  // 상세 정보 조회 이벤트 핸들러\n  const updateWishList = id => {\n    const selectedItem = Array.isArray(curWishList) && curWishList.find(item => item.id === id);\n\n    if (selectedItem) {\n      history.push({\n        pathname: '/add',\n        state: {\n          type: 'wishList',\n          actionType: 'update',\n          targetItem: selectedItem,\n          targetMonth: `${curYear}-${curMonth}`\n        },\n      });\n    }\n  };\n  \n  // 삭제 버튼 클릭 이벤트 핸들러\n  const deleteWishList = id => {\n    dispatch(deleteWish({\n      userEmail: userObj.user.email,\n      month: moment().format(`${curYear}-${curMonth}`),\n      id,\n    }));\n  };\n\n  // 리스트 영역 내 터치 이벤트 핸들러\n  const onEventHandler = (e, id) => {\n\n    switch (e.type) {\n      case 'touchstart':\n        // 터치 이벤트 시작 시 처리\n        setTouchPosition({\n          x: e.changedTouches[0].pageX,\n          y: e.changedTouches[0].pageY\n        });\n        break;\n      case 'touchend':\n        // 터치 이벤트 종료 시 처리\n        const xPos = e.changedTouches[0].pageX;\n        const yPos = e.changedTouches[0].pageY;\n\n        if (touchPosition.x === xPos && touchPosition.y === yPos) {\n          // 동일 위치 터치 시 상세정보 조회 이벤트 트리거\n          if (showDelBtn === id) {\n            // 이미 선택된 아이템 터치 시 상세 \n            updateWishList(id);\n          } else {\n            // 다른 아이템 선택 시 선택 정보 초기화\n            setShowDelBtn('');\n            setTouchPosition({ x: '', y: '' });\n          }\n        } else {\n          let targetId;\n        \n          const distanceX = Math.abs(touchPosition.x - e.changedTouches[0].pageX);\n          const distanceY = Math.abs(touchPosition.y - e.changedTouches[0].pageY);\n\n          if (distanceX > distanceY && showDelBtn !== id) {\n            targetId = id;\n          } else {\n            targetId = '';\n          }\n\n          setShowDelBtn(targetId);\n          setTouchPosition({ x: '', y: '' });\n        }\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  // swipe 라이브러리용 핸들러\n  const actionHandler = useSwipeable({\n    onTap: e => console.log(e),\n    onSwipedLeft: e => console.log(e),\n  })\n\n  // 장바구니 목록 조회\n  const getWishList = useCallback(() => {\n    dispatch(readWishList({ userEmail: userObj.user.email, month: moment().format(`${curYear}-${curMonth}`) }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curYear, curMonth, userObj.user.email]);\n\n  // 장바구니 목록 조회 결과 변경 시 세팅\n  const setWishList = useCallback(() => {\n    const totalAmount = Array.isArray(wishList) ? wishList.reduce((sum, item) => sum += item.itemPrice, 0) : 0;\n\n    setCurWishList(wishList);\n    setTotalWishAmount(totalAmount);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wishList]);\n\n  // 컴포넌트 렌더에 필요한 데이터 조회 & 세팅\n  const setData = () => {\n    if (called === '' || called !== `${curYear}-${curMonth}`) {\n      getWishList();\n    } else {\n      setWishList();\n    }\n  };\n\n  // 조회연월 또는 location 변경 시 조회\n  useEffect(() => {\n    if (location && location.state && location.state.targetMonth) {\n      // 페이지 이동 후 데이터 세팅\n      const tempArr = location.state.targetMonth.split('-');\n      const tempYear = tempArr[0];\n      const tempMonth = tempArr[1];\n\n      // 페이지 이동 시 사용하는 파라미터 제거\n      history.replace({ state: undefined });\n      \n      if (tempYear !== curYear || tempMonth !== curMonth) {\n        \n        setCurYear(tempYear);\n        setCurMonth(tempMonth);\n\n        dispatch(readWishList({ userEmail: userObj.user.email, month: moment().format(`${tempYear}-${tempMonth}`) }));\n      } else {\n        setData();\n      }\n    } else {\n      setData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curMonth, location]);\n\n  // 장바구니 데이터 조회 후 항목 세팅\n  useEffect(() => {\n    setWishList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [wishList]);\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"selected-month-box\">\n        <div className=\"vertical-empty-space\" />\n        \n        <div className=\"selected-month-info-box\">\n          <IconButton onClick={() => onClickArrowBtn('prev')}>\n            <ArrowBackIos />\n          </IconButton>\n          \n          <div className=\"selected-month-texts\">\n            <div className=\"title\">\n              {cm.trimMonth(curMonth)}월 장바구니\n            </div>\n            <div className=\"amount\">\n              {cm.addComma(totalWishAmount)}원\n            </div>\n          </div>\n          \n          <IconButton id=\"next\" onClick={() => onClickArrowBtn('next')}>\n            <ArrowForwardIos />\n          </IconButton>\n        </div>\n      </div>\n       \n      <WishList\n        curWishList={curWishList}\n        actionHandler={actionHandler}\n        showDelBtn={showDelBtn}\n        deleteWishList={deleteWishList}\n        onEventHandler={onEventHandler}\n      />\n      <FloatingAddBtn movePage={moveToAddWishList} />\n    </div>\n  );\n};\n\nexport default WishListContainer;","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'incomeInfo/READ';\nconst REGISTER = 'incomeInfo/REGISTER';\nconst DELETE = 'incomeInfo/DELETE';\nconst UPDATE = 'incomeInfo/UPDATE';\nconst SET_INCOME_LIST = 'incomeInfo/SET_INCOME_LIST';\nconst SUCCESS = 'incomeInfo/SUCCESS';\nconst FAIL = 'incomeInfo/FAIL';\n\n// Action creators\nexport const readIncomeList = obj => ({ type: READ, ...obj });\nexport const registerNewIncome = obj => ({ type: REGISTER, obj });\nexport const deleteIncome = obj => ({ type: DELETE, obj });\nexport const updateIncome = obj => ({ type: UPDATE, obj });\n\n// saga\nfunction* readIncomeListSaga(action) {\n  try {\n    const { userEmail, month } = action;\n\n    const incomeList = yield call(async () => {\n      const incomeRefs = await dbService.collection('incomelists')\n        .doc(userEmail).collection(month).orderBy('priority', 'asc').get();\n      \n      const { docs } = incomeRefs;\n\n      if (docs) {\n        const tempArr = [];\n\n        docs.forEach(doc => {\n          if (doc.exists) {\n            tempArr.push({ id: doc.id, ...doc.data() });\n          }\n        });\n\n        return tempArr;\n      }\n    });\n\n    yield put({ type: SET_INCOME_LIST, incomeList, month });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* registerNewIncomeSaga(action) {\n  try {\n    const { userEmail, item, curYm } = action.obj;\n\n    const result = yield call(async () => {\n      return dbService.collection('incomelists')\n        .doc(userEmail).collection(curYm).add(item)\n        .then(result => {\n          return result;\n        })\n        .catch(error => {\n          console.log(error);\n          return null;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '등록했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* deleteIncomeSaga(action) {\n  try {\n    const { obj: { userEmail, month, id } } = action;\n\n    const result = yield call(async () => {\n      return dbService.collection('incomelists')\n        .doc(userEmail).collection(month).doc(id).delete()\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '삭제했습니다!' });\n      yield put({ type: READ, userEmail: userEmail, month: month });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n    \n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* updateIncomeSaga(action) {\n  try {\n    const { userEmail, item, curYm } = action.obj;\n    \n    const result = yield call(async () => {\n      return dbService.collection('incomelists')\n        .doc(userEmail).collection(curYm).doc(item.id).update({ ...item })\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '수정했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* incomeInfoSaga() {\n  yield takeEvery(REGISTER, registerNewIncomeSaga);\n  yield takeEvery(READ, readIncomeListSaga);\n  yield takeEvery(DELETE, deleteIncomeSaga);\n  yield takeEvery(UPDATE, updateIncomeSaga);\n}\n\n// initial states\nconst initialState = {\n  incomeList: [],\n  incomeMsg: { msg: '', isError: false },\n  called: '',\n};\n\n// reducers\nexport default function incomeInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case READ:\n      return state;\n    case DELETE:\n      return state;\n    case UPDATE:\n      return state;\n    case SET_INCOME_LIST:\n      return {\n        incomeList: action.incomeList,\n        called: action.month,\n      };\n    case SUCCESS:\n      return {\n        incomeMsg: { msg: action.msg, isError: false },       \n      };\n    case FAIL:\n      return {\n        incomeMsg: { msg: action.msg, isError: true },       \n      };\n    default:\n      return state;\n  }\n};","import React from 'react';\n\nconst IncomeList = () => {\n  return (<div>ddd</div>);\n};\n\nexport default IncomeList;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { readIncomeList, deleteIncome } from 'modules/incomeInfo';\nimport * as cm from 'share/common';\nimport FloatingAddBtn from 'share/FloatingAddBtn';\nimport IncomeList from 'components/IncomeList';\nimport { IconButton } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\n\nconst IncomeContainer = () => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const { userObj, incomeList, called } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n    incomeList: state.incomeInfo.incomeList,\n    called: state.incomeInfo.called,\n  }));\n\n  const [curYear, setCurYear] = useState(moment().format('YYYY'));\n  const [curMonth, setCurMonth] = useState(moment().format('MM'));\n  const [curIncomeList, setCurIncomeList] = useState([]);\n  const [totalIncomeAmount, setTotalIncomeAmount] = useState(0);\n  const [showDelBtn, setShowDelBtn] = useState(false);\n  const [touchPosition, setTouchPosition] = useState({ x: '', y: '' });\n\n// 상단 화살표 버튼 클릭 이벤트 핸들러\n  const onClickArrowBtn = flag => {\n    let newlySelectedMonth = '';\n\n    if (flag === 'prev') {\n      // 왼쪽 화살표 클릭 시 이전달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).subtract(1, 'months');\n    } else {\n      // 오른쪽 화살표 클릭 시 다음달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).add(1, 'months');\n    }\n    \n    setCurYear(moment(newlySelectedMonth).format('YYYY'));\n    setCurMonth(moment(newlySelectedMonth).format('MM'));\n  };\n\n  // 추가 버튼 클릭 이벤트 핸들러\n  const moveToAddIncomeList = () => {\n    history.push({\n      pathname: '/add',\n      state: { type: 'incomeList', actionType: 'add', targetMonth: `${curYear}-${curMonth}` },\n    });\n  };\n\n  // 상세 정보 조회 이벤트 핸들러\n  const updateWishList = id => {\n    const selectedItem = Array.isArray(curIncomeList) && curIncomeList.find(item => item.id === id);\n\n    if (selectedItem) {\n      history.push({\n        pathname: '/add',\n        state: {\n          type: 'incomeList',\n          actionType: 'update',\n          targetItem: selectedItem,\n          targetMonth: `${curYear}-${curMonth}`\n        },\n      });\n    }\n  };\n  \n  // 삭제 버튼 클릭 이벤트 핸들러\n  const deleteIncomeList = id => {\n    dispatch(deleteIncome({\n      userEmail: userObj.user.email,\n      month: moment().format(`${curYear}-${curMonth}`),\n      id,\n    }));\n  };\n\n  // 리스트 영역 내 터치 이벤트 핸들러\n  const onEventHandler = (e, id) => {\n\n    switch (e.type) {\n      case 'touchstart':\n        // 터치 이벤트 시작 시 처리\n        setTouchPosition({\n          x: e.changedTouches[0].pageX,\n          y: e.changedTouches[0].pageY\n        });\n        break;\n      case 'touchend':\n        // 터치 이벤트 종료 시 처리\n        const xPos = e.changedTouches[0].pageX;\n        const yPos = e.changedTouches[0].pageY;\n\n        if (touchPosition.x === xPos && touchPosition.y === yPos) {\n          // 동일 위치 터치 시 상세정보 조회 이벤트 트리거\n          if (showDelBtn === id) {\n            // 이미 선택된 아이템 터치 시 상세 \n            updateWishList(id);\n          } else {\n            // 다른 아이템 선택 시 선택 정보 초기화\n            setShowDelBtn('');\n            setTouchPosition({ x: '', y: '' });\n          }\n        } else {\n          let targetId;\n        \n          const distanceX = Math.abs(touchPosition.x - e.changedTouches[0].pageX);\n          const distanceY = Math.abs(touchPosition.y - e.changedTouches[0].pageY);\n\n          if (distanceX > distanceY && showDelBtn !== id) {\n            targetId = id;\n          } else {\n            targetId = '';\n          }\n\n          setShowDelBtn(targetId);\n          setTouchPosition({ x: '', y: '' });\n        }\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 장바구니 목록 조회\n  const getIncomeList = useCallback(() => {\n    dispatch(readIncomeList({ userEmail: userObj.user.email, month: moment().format(`${curYear}-${curMonth}`) }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curYear, curMonth, userObj.user.email]);\n\n  // 장바구니 목록 조회 결과 변경 시 세팅\n  const setIncomeList = useCallback(() => {\n    const totalAmount = Array.isArray(incomeList) ? incomeList.reduce((sum, item) => sum += item.itemPrice, 0) : 0;\n\n    setCurIncomeList(incomeList);\n    setTotalIncomeAmount(totalAmount);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [incomeList]);\n\n  // 컴포넌트 렌더에 필요한 데이터 조회 & 세팅\n  const setData = () => {\n    if (called === '' || called !== `${curYear}-${curMonth}`) {\n      getIncomeList();\n    } else {\n      setIncomeList();\n    }\n  };\n\n  // 조회연월 또는 location 변경 시 조회\n  useEffect(() => {\n    if (location && location.state && location.state.targetMonth) {\n      // 페이지 이동 후 데이터 세팅\n      const tempArr = location.state.targetMonth.split('-');\n      const tempYear = tempArr[0];\n      const tempMonth = tempArr[1];\n\n      // 페이지 이동 시 사용하는 파라미터 제거\n      history.replace({ state: undefined });\n      \n      if (tempYear !== curYear || tempMonth !== curMonth) {\n        \n        setCurYear(tempYear);\n        setCurMonth(tempMonth);\n\n        dispatch(readIncomeList({ userEmail: userObj.user.email, month: moment().format(`${tempYear}-${tempMonth}`) }));\n      } else {\n        setData();\n      }\n    } else {\n      setData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curMonth, location]);\n\n  // 장바구니 데이터 조회 후 항목 세팅\n  useEffect(() => {\n    setIncomeList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [incomeList]);\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"selected-month-box\">\n        <div className=\"vertical-empty-space\" />\n        \n        <div className=\"selected-month-info-box\">\n          <IconButton onClick={() => onClickArrowBtn('prev')}>\n            <ArrowBackIos />\n          </IconButton>\n          \n          <div className=\"selected-month-texts\">\n            <div className=\"title\">\n              {cm.trimMonth(curMonth)}월 수입\n            </div>\n            <div className=\"amount\">\n              {cm.addComma(totalIncomeAmount)}원\n            </div>\n          </div>\n          \n          <IconButton id=\"next\" onClick={() => onClickArrowBtn('next')}>\n            <ArrowForwardIos />\n          </IconButton>\n        </div>\n      </div>\n       \n      <IncomeList\n        curIncomeList={curIncomeList}\n        showDelBtn={showDelBtn}\n        deleteIncomeList={deleteIncomeList}\n        onEventHandler={onEventHandler}\n      />\n      <FloatingAddBtn movePage={moveToAddIncomeList} />\n    </div>\n  );\n};\n\nexport default IncomeContainer;","import React from 'react';\n\nconst ExpenseContainer = () => {\n\n  return (\n    <div>Expense</div>\n  );\n};\n\nexport default ExpenseContainer;","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\n\nconst ItemDetail = ({ item, onChangeItem, onClickPrevBtn, onClickSubmitBtn }) => (\n  <div className=\"item-container\">\n    <div className=\"item-detail\">\n      <TextField\n        required\n        name=\"itemName\"\n        label=\"품목명\"\n        value={item.itemName}\n        onChange={onChangeItem}\n      />\n      <TextField\n        required\n        name=\"itemPrice\"\n        label=\"금액\"\n        value={item.itemPrice}\n        onChange={onChangeItem}\n      />\n      <TextField\n        name=\"priority\"\n        label=\"우선순위\"\n        value={item.priority}\n        onChange={onChangeItem}\n      />\n      <TextField\n        name=\"remark\"\n        label=\"비고\"\n        value={item.remark}\n        onChange={onChangeItem}\n      />       \n    </div>\n    \n    <div className=\"item-btn-area\">\n      <Button\n        variant=\"contained\"\n        onClick={onClickPrevBtn}\n      >\n        돌아가기\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClickSubmitBtn}\n      >\n        저장\n      </Button>\n    </div>\n  </div>\n);\n\nexport default ItemDetail;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { registerNewWish, updateWish } from 'modules/wishInfo';\nimport ItemDetail from 'components/ItemDetail';\n\nconst ItemDetailContainer = () => {\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const { state: { type, actionType, targetItem, targetMonth } } = location;\n\n  const { userObj } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n  }));\n\n  const [item, setItem] = useState({\n    priority: '',\n    itemName: '',\n    itemPrice: 0,\n    remark: '',\n  });\n\n  // 항목 변경 이벤트 핸들러\n  const onChangeItem = (e) => {\n    const { target: { name, value } } = e;\n    let newValue = value;\n\n    switch (name) {\n      case 'priority':\n      case 'itemPrice':\n        newValue = Number(newValue.replace(/[^0-9]/gi, ''));\n        break;\n      case 'itemName':\n      case 'remark':\n        break;\n      default:\n        break;\n    }\n\n    setItem({\n      ...item,\n      [name]: newValue,\n    });\n  };\n\n  // 돌아가기 버튼 클릭 이벤트 핸들러\n  const onClickPrevBtn = () => {\n    history.push({\n      pathname: `/${type}`,\n      state: { targetMonth },\n    });\n  };\n\n  // 저장 버튼 클릭 이벤트 핸들러\n  const onClickSubmitBtn = () => {\n    const action = mapActions();\n    const param = mapParamObj();\n\n    dispatch(action(param));\n  };\n\n  // action 유형에 따라 module action mapping\n  const mapActions = () => {\n    let action = '';\n\n    const wishActionMap = new Map([\n      ['add', registerNewWish],\n      ['update', updateWish],\n    ]);\n\n    switch (type) {\n      case 'wishList':\n        action = wishActionMap.get(actionType);\n        break;\n      default:\n        break;\n    }\n\n    return action;\n  };\n\n  // action 유형에 따라 parameter mapping\n  const mapParamObj = () => {\n    let paramObj = {};\n\n    switch (type) {\n      case 'wishList':\n        paramObj = {\n          userEmail: userObj.user.email,\n          item,\n          curYm: targetMonth,\n        };\n        break;\n      default:\n        break;\n    }\n\n    return paramObj;\n  };\n\n  // detail page title mapping\n  const mapPageTitle = () => {\n    let typeText = '';\n    let actionText = '';\n\n    switch (type) {\n      case 'wishList':\n        typeText = '장바구니';\n        break;\n      default:\n        break;\n    }\n\n    switch (actionType) {\n      case 'add':\n        actionText = '추가';\n        break;\n      case 'update':\n        actionText = '수정';\n        break;\n      default:\n        break;\n    }\n\n    return `${typeText} ${actionText}`;\n  };\n\n  useEffect(() => {\n    if (targetItem) {\n      setItem(targetItem);\n    }\n  }, [targetItem, targetMonth]);\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"vertical-empty-space\" />\n      <div className=\"page-title\">{mapPageTitle()}</div>\n      <ItemDetail\n        item={item}\n        onChangeItem={onChangeItem}\n        onClickPrevBtn={onClickPrevBtn}\n        onClickSubmitBtn={onClickSubmitBtn}\n      />\n    </div>\n  )\n};\n\nexport default ItemDetailContainer;\n","import React, { useState, useEffect } from 'react';\nimport { /*useLocation,*/ useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst ToastMessage = () => {\n\n  // const location = useLocation();\n  const history = useHistory();\n\n  const { isLoggedIn, authMsg, wishMsg } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n    authMsg: state.userInfo.authMsg,  // 신규등록 or 로그인 시 에러 메시지\n    wishMsg: state.wishInfo.wishMsg,  // 장바구니 스토어 액션 처리 후 메시지\n  }));\n\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('error');\n\n  const toggleAlert = () => setOpenAlert(!openAlert);\n\n  useEffect(() => {\n    // 로그인 or 신규가입 과정에서 에러 발생 시 서버 에러 메시지 출력\n    const { msg, isError } = authMsg;\n    if (!isLoggedIn && history.location.pathname === '/' && msg !== '' && isError ) {\n      setAlertMessage(msg);\n      setOpenAlert(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authMsg.msg]);\n\n  useEffect(() => {\n    // 장바구니 등록/삭제/수정 처리 후 처리 메시지 출력\n    if (wishMsg) {\n      const { msg, isError } = wishMsg;\n      if (isLoggedIn && msg !== '') {\n        setAlertMessage(msg);\n        if (!isError) {\n          setAlertType('success');\n        }\n        setOpenAlert(true);\n      }\n    }\n    \n  }, [wishMsg, isLoggedIn]);\n  \n  return (\n    <Snackbar open={openAlert} autoHideDuration={3000} onClose={toggleAlert}>\n      <MuiAlert severity={alertType} elevation={6} variant=\"filled\" >\n        {alertMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n\nexport default ToastMessage;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport NavBar from 'components/NavBar';\nimport HomeContainer from 'containers/HomeContainer';\nimport AuthContainer from 'containers/AuthContainer';\nimport WishListContainer from \"containers/WishListContainer\";\nimport IncomeContainer from \"containers/IncomeContainer\";\nimport ExpenseContainer from \"containers/ExpenseContainer\";\nimport ItemDetailContainer from \"containers/ItemDetailContainer\";\nimport ToastMessage from \"share/ToastMessage\";\n\nconst AppRouter = () => {\n  const { isLoggedIn } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n  }));\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <NavBar />\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <HomeContainer />\n            </Route>\n            <Route exact path=\"/wishList\">\n              <WishListContainer />\n            </Route>\n            <Route exact path=\"/income\">\n              <IncomeContainer />\n            </Route>\n            <Route exact path=\"/expense\">\n              <ExpenseContainer />\n            </Route>\n            <Route exact path=\"/add\">\n              <ItemDetailContainer />\n            </Route>\n            <ToastMessage />\n          </>\n        ) : (\n            <>\n              <Route exact path=\"/\">\n                <AuthContainer />\n                <ToastMessage />\n              </Route>\n              <Redirect to={{ pathname: '/' }} />\n            </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;","import React from 'react';\nimport AppRouter from './router/AppRouter';\nimport './style/style.scss';\n\nfunction App() {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'moneyInfo/READ';\n// const REGISTER = 'moneyInfo/REGISTER';\n// const LOGIN = 'userInfo/LOGIN';\n// const LOGOUT = 'userInfo/LOGOUT';\n// const SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\n// const SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\n\n// Action creators\nexport const readMoneyInfo = obj => ({ type: READ, obj });\n// export const registerNewAccount = obj => ({ type: REGISTER, obj });\n// export const login = obj => ({ type: LOGIN, obj });\n// export const logout = () => ({ type: LOGOUT });\n// export const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\n// export const setUserLogout = () => ({ type: SET_USER_LOGOUT });\n\n// saga\n// function* registerNewAccountSaga(action) {  \n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* loginSaga(action) {\n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* logoutSaga() {\n//   try {\n//     yield call(rsf.auth.signOut);\n//     yield put({ type: SET_USER_LOGOUT });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\nexport function* userInfoSaga() {\n  // yield takeEvery(REGISTER, registerNewAccountSaga);\n  // yield takeEvery(LOGIN, loginSaga);\n  // yield takeEvery(LOGOUT, logoutSaga);\n}\n\n// initial states\nconst initialState = {\n  isLoggedIn: false,\n  userObj: {},\n};\n\n// reducers\nexport default function UserInfo(state = initialState, action) {\n  switch (action.type) {\n    // case REGISTER:\n    //   return state;\n    // case LOGIN:\n    //   return state;\n    // case LOGOUT:\n    //   return state;\n    // case SET_USER_LOGIN:\n    //   return {\n    //     isLoggedIn: true,\n    //     userObj: action.user,\n    //   };\n    // case SET_USER_LOGOUT:\n    //   return {\n    //     isLoggedIn: false,\n    //     useObj: {},\n    //   };\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\n\nimport userInfo, { userInfoSaga } from './userInfo';\nimport moneyInfo from './moneyInfo';\nimport wishInfo, { wishInfoSaga } from './wishInfo';\nimport incomeInfo, { incomeInfoSaga } from './incomeInfo';\n\nconst rootReducer = combineReducers({\n  userInfo,\n  moneyInfo,\n  wishInfo,\n  incomeInfo\n});\n\nexport function* rootSaga() {\n  yield all([userInfoSaga(), wishInfoSaga(), incomeInfoSaga()]);\n  \n}\n\nexport default rootReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer, { rootSaga } from './modules';\n\nconst sagaMiddleware = createSagaMiddleware(); // 사가 미들웨어를 만듭니다.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware)\n  )\n);\n\nsagaMiddleware.run(rootSaga); // 루트 사가 실행\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}