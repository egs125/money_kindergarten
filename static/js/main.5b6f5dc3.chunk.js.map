{"version":3,"sources":["fBase.js","modules/userInfo.js","components/NavBar.js","containers/HomeContainer.js","components/Auth.js","containers/AuthContainer.js","modules/wishInfo.js","share/FloatingAddBtn.js","share/common.js","components/WishList.js","containers/WishListContainer.js","modules/incomeInfo.js","containers/IncomeContainer.js","containers/ExpenseContainer.js","components/ItemDetail.js","containers/ItemDetailContainer.js","share/ToastMessage.js","router/AppRouter.js","App.js","modules/moneyInfo.js","modules/index.js","index.js"],"names":["moneyKindergarten","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","dbService","firestore","rsf","ReduxSagaFirebase","registerNewAccountSaga","loginSaga","logoutSaga","setErrorMsgSaga","userInfoSaga","REGISTER","LOGIN","LOGOUT","SET_USER_LOGIN","SET_USER_LOGOUT","FAIL","FAIL_ON_VALIDATION","SET_ERROR_MSG","login","obj","type","setErrorMsg","msg","action","email","password","call","auth","createUserWithEmailAndPassword","user","put","message","signInWithEmailAndPassword","signOut","takeEvery","initialState","isLoggedIn","userObj","authMsg","isError","NavBar","history","useHistory","dispatch","useDispatch","useState","openDrawer","setOpenDrawer","useSelector","state","userInfo","toggleDrawer","onMovePage","page","push","className","IconButton","onClick","Close","Menu","MonetizationOn","List","ListItem","button","Divider","HomeContaier","wishList","wishInfo","Auth","isOnRegister","toggleRegisterProcess","onChangeValue","onPressKey","handleLogin","onClickRegisterBtn","ChildCare","fontSize","LocalAtm","TextField","name","label","required","value","onChange","onKeyPress","id","Button","variant","color","size","AuthContainer","setIsOnRegister","setEmail","setPassword","onRegister","registerNewAccount","checkValidation","isValid","e","target","charCode","document","querySelector","focus","registerNewWishSaga","readWishListSaga","deleteWishSaga","updateWishSaga","wishInfoSaga","READ","DELETE","UPDATE","SET_WISH_LIST","SUCCESS","registerNewWish","userEmail","item","curYm","a","collection","doc","add","then","result","catch","error","console","log","month","get","wishRefs","docs","map","exists","data","delete","wishMsg","called","FloatingAddBtn","movePage","style","trimMonth","substr","addComma","number","toString","replace","WishList","curMonth","totalWishAmount","curWishList","actionHandler","showDelBtn","deleteWishList","onEventHandler","cm","Array","isArray","index","draggable","onDoubleClick","onTouchStart","onTouchEnd","itemName","itemPrice","WishListContainer","curYear","moment","format","setCurWishList","setTotalWishAmount","setShowDelBtn","x","y","touchPosition","setTouchPosition","useSwipeable","onTap","onSwipedLeft","useEffect","totalAmount","reduce","sum","changedTouches","pageX","pageY","distanceX","Math","abs","distanceY","pathname","actionType","readIncomeSaga","incomeInfoSaga","incomeObj","IncomeContainer","ExpenseContainer","ItemDetail","onChangeItem","onClickPrevBtn","onClickSubmitBtn","priority","remark","ItemDetailContainer","location","useLocation","actionObj","setItem","mapActions","wishActionMap","Map","mapParamObj","paramObj","isSucceeded","typeText","actionText","mapPageTitle","newValue","Number","param","ToastMessage","openAlert","setOpenAlert","alertMessage","setAlertMessage","alertType","setAlertType","Snackbar","open","autoHideDuration","onClose","severity","elevation","AppRouter","basename","exact","path","HomeContainer","to","App","rootSaga","all","rootReducer","combineReducers","moneyInfo","incomeInfo","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5b6f5dc3.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport ReduxSagaFirebase from 'redux-saga-firebase'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst moneyKindergarten = firebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const rsf = new ReduxSagaFirebase(moneyKindergarten);\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { rsf } from \"../fBase\";\n\n// Action types\nconst REGISTER = 'userInfo/REGISTER';\nconst LOGIN = 'userInfo/LOGIN';\nconst LOGOUT = 'userInfo/LOGOUT';\nconst SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\nconst SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\nconst FAIL = 'userInfo/FAIL';\nconst FAIL_ON_VALIDATION = 'userInfo/FAIL_ON_VALIDATION';\nconst SET_ERROR_MSG = 'userInfo/SET_ERROR_MSG';\n\n// Action creators\nexport const registerNewAccount = obj => ({ type: REGISTER, obj });\nexport const login = obj => ({ type: LOGIN, obj });\nexport const logout = () => ({ type: LOGOUT });\nexport const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\nexport const setUserLogout = () => ({ type: SET_USER_LOGOUT });\nexport const setErrorMsg = msg => ({ type: SET_ERROR_MSG, msg });\n\n// saga\nfunction* registerNewAccountSaga(action) {  \n  try {\n    const { email, password } = action.obj;\n    const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n    yield put({ type: SET_USER_LOGIN, user });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* loginSaga(action) {\n  try {\n    const { email, password } = action.obj;\n    const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n    yield put({ type: SET_USER_LOGIN, user });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(rsf.auth.signOut);\n    yield put({ type: SET_USER_LOGOUT });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* setErrorMsgSaga(action) {\n  yield put({ type: FAIL_ON_VALIDATION, msg: action.msg });\n}\n\nexport function* userInfoSaga() {\n  yield takeEvery(REGISTER, registerNewAccountSaga);\n  yield takeEvery(LOGIN, loginSaga);\n  yield takeEvery(LOGOUT, logoutSaga);\n  yield takeEvery(SET_ERROR_MSG, setErrorMsgSaga);\n}\n\n// initial states\nconst initialState = {\n  isLoggedIn: false,\n  userObj: {},\n  authMsg: { msg: '', isError: false },\n};\n\n// reducers\nexport default function UserInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case LOGIN:\n      return state;\n    case LOGOUT:\n      return state;\n    case SET_USER_LOGIN:\n      return {\n        isLoggedIn: true,\n        userObj: action.user,\n        authMsg: { msg: '', isError: false },\n      };\n    case SET_USER_LOGOUT:\n      return {\n        isLoggedIn: false,\n        userObj: {},\n        authMsg: { msg: '', isError: false },\n      };\n    case FAIL:\n      return {\n        authMsg: { msg: action.msg, isError: true },\n      };\n    case SET_ERROR_MSG:\n      return state;\n    case FAIL_ON_VALIDATION:\n      return {\n        authMsg: { msg: action.msg, isError: true },\n      };\n    default:\n      return state;\n  }\n};","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, List, ListItem, Divider } from '@material-ui/core';\nimport { Menu, Close, MonetizationOn } from '@material-ui/icons';\nimport { logout } from '../modules/userInfo';\n\nconst NavBar = () => {\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  \n  const { isLoggedIn } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n  }));\n\n  const toggleDrawer = () => {\n    setOpenDrawer(!openDrawer);\n  };\n\n  const onMovePage = (page) => {\n    toggleDrawer();\n    history.push(`/${page}`);\n  };\n\n  const onLogout = () => {\n    toggleDrawer();\n    dispatch(logout());\n  }\n\n  return (\n    <>\n      <nav className=\"nav-container\">\n        {isLoggedIn ? (\n          <IconButton onClick={toggleDrawer}>\n          {openDrawer ? (\n            <Close />\n          ) : (\n            <Menu />\n          )}\n        </IconButton>\n        ) : (\n          <IconButton>\n            <MonetizationOn />\n          </IconButton>\n        )}\n        <span className=\"app-title\">재린이 유치원</span>\n      </nav>\n      {openDrawer && (\n        <div className=\"nav-drawer\">\n          <List>\n            <ListItem\n              button\n              onClick={() => onMovePage('')}\n            >\n              <span>요약</span>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => onMovePage('wishList')}\n            >\n              <span>장바구니</span>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => onMovePage('expense')}\n            >\n              <span>지출</span>\n            </ListItem>\n            <ListItem\n              button\n              className=\"nav-drawer-last-item\"\n              onClick={() => onMovePage('income')}\n            >\n              <span>수입</span>\n            </ListItem>\n            {isLoggedIn && (\n              <>\n                <Divider />\n                <ListItem button onClick={onLogout}><span>로그아웃</span></ListItem>\n              </>\n            )}\n          </List>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nconst HomeContaier = () => {\n  const dispatch = useDispatch();\n  \n  const { userObj, wishList } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n    wishList: state.wishInfo.wishList,\n  }));\n\n  return (\n    <div>\n      Home!\n    </div>\n  );\n};\n\nexport default HomeContaier;\n","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { ChildCare, LocalAtm } from '@material-ui/icons';\n\nconst Auth = ({\n  isOnRegister,\n  email, password,\n  toggleRegisterProcess, onChangeValue,\n  onPressKey, handleLogin, onClickRegisterBtn,\n}) => (\n  <div className=\"auth-container\">\n\n    <div className=\"icon-area\">\n      <ChildCare fontSize=\"large\" />\n      <LocalAtm fontSize=\"large\" />\n      <ChildCare fontSize=\"large\" />\n    </div>\n\n    <div className=\"input-area\">\n      <TextField\n        name=\"email\"\n        type=\"text\"\n        label=\"Email address\"\n        required\n        value={email}\n        onChange={onChangeValue}\n        onKeyPress={onPressKey}\n      />\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        label=\"password\"\n        required\n        value={password}\n        onChange={onChangeValue}\n        onKeyPress={onPressKey}\n      />\n    </div>\n\n    <div className=\"btn-area\">\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        onClick={isOnRegister ? onClickRegisterBtn : handleLogin}\n      >\n        {isOnRegister ? '신규 등록' : '로그인'}\n      </Button>\n      <div className=\"spacing-area\" />\n      <Button\n        variant=\"contained\"\n        color=\"success\"\n        size=\"large\"\n        onClick={toggleRegisterProcess}\n      >\n        {isOnRegister ? '취소' : '계정 생성'}\n      </Button>\n    </div>\n  </div>\n);\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerNewAccount, login, setErrorMsg } from 'modules/userInfo';\nimport Auth from 'components/Auth';\n\nconst AuthContainer = () => {\n\n  const dispatch = useDispatch();\n\n  const [isOnRegister, setIsOnRegister] = useState(false);  // 신규등록/로그인 전환\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onRegister = obj => dispatch(registerNewAccount(obj));\n  const onLogin = obj => dispatch(login(obj));\n\n  const toggleRegisterProcess = () => setIsOnRegister(!isOnRegister);\n\n  // 이메일/비밀번호 입력창 변경 이벤트 핸들러\n  const onChangeValue = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  // 엔터키 입력 이벤트 핸들러\n  const onPressKey = e => {\n    const { charCode, target: { name } } = e;\n    \n    if (charCode === 13) { \n      if (name === 'email') {    \n        const target = document.querySelector('#password');\n        if (target) {\n          target.focus();\n        }\n      } else if (name === 'password') {\n        handleLogin();\n      }\n    } \n  };\n\n  // 정합성 체크\n  const checkValidation = () => {\n    let isValid = true;\n    if (email === '') {\n      dispatch(setErrorMsg('이메일 주소를 입력해주세요'));\n      isValid = false;\n    } else if (password === '') {\n      dispatch(setErrorMsg('비밀번호를 입력해주세요'));\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  // 로그인 이벤트 핸들러\n  const handleLogin = () => {\n    const isValid = checkValidation();\n\n    if (isValid) {\n      onLogin({ email, password });\n    }\n  };\n\n  // 신규 등록 버튼 클릭 이벤트 핸들러\n  const onClickRegisterBtn = () => {\n    const isValid = checkValidation();\n\n    if (isValid) {\n      onRegister({ email, password });\n    }\n  };\n\n  return (\n    <>\n      <Auth\n        isOnRegister={isOnRegister}\n        email={email}\n        password={password}\n        toggleRegisterProcess={toggleRegisterProcess}\n        onChangeValue={onChangeValue}\n        onPressKey={onPressKey}\n        handleLogin={handleLogin}\n        onClickRegisterBtn={onClickRegisterBtn}\n      />\n    </>\n  );\n\n};\n\nexport default AuthContainer;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst REGISTER = 'wishInfo/REGISTER';\nconst READ = 'wishInfo/READ';\nconst DELETE = 'wishInfo/DELETE';\nconst UPDATE = 'wishInfo/UPDATE';\nconst SET_WISH_LIST = 'wishList/SET_WISH_LIST';\nconst SUCCESS = 'wishList/SUCCESS';\nconst FAIL = 'wishList/FAIL';\n\n// Action creators\nexport const registerNewWish = obj => ({ type: REGISTER, obj });\nexport const readWishList = obj=> ({ type: READ, ...obj });\nexport const deleteWish = obj => ({ type: DELETE, obj });\nexport const updateWish = obj => ({ type: UPDATE, obj });\n\n// saga\nfunction* registerNewWishSaga(action) {\n  try {\n    const { userEmail, item, curYm } = action.obj;\n\n    const result = yield call(async () => {\n      return dbService.collection('wishlists')\n        .doc(userEmail).collection(curYm).add(item)\n        .then(result => {\n          return result;\n        })\n        .catch(error => {\n          console.log(error);\n          return null;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '등록했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* readWishListSaga(action) {\n  try {\n    const { userEmail, month } = action;\n\n    const wishList = yield call(async () => {\n      const wishRefs = await dbService.collection('wishlists')\n        .doc(userEmail).collection(month).get();\n      \n      const { docs } = wishRefs;\n\n      if (docs) {\n        return docs.map(doc => {\n          if (doc.exists) {\n            return { id: doc.id, ...doc.data() };\n          }\n        });\n      }\n    });\n\n    yield put({ type: SET_WISH_LIST, wishList, month });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* deleteWishSaga(action) {\n  try {\n    const { obj: { userEmail, month, id } } = action;\n\n    const result = yield call(async () => {\n      return dbService.collection('wishlists')\n        .doc(userEmail).collection(month).doc(id).delete()\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '삭제했습니다!' });\n      yield put({ type: READ, userEmail: userEmail, month: month });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n    \n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* updateWishSaga(action) {\n  try {\n    console.log(action);\n    // dbService.doc(`mukkit/${mukkit.id}`).update({\n    //     isVisited: true,\n    //   }); \n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* wishInfoSaga() {\n  yield takeEvery(REGISTER, registerNewWishSaga);\n  yield takeEvery(READ, readWishListSaga);\n  yield takeEvery(DELETE, deleteWishSaga);\n  yield takeEvery(UPDATE, updateWishSaga);\n}\n\n// initial states\nconst initialState = {\n  wishList: [],\n  wishMsg: { msg: '', isError: false },\n  called: '',\n};\n\n// reducers\nexport default function wishInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case READ:\n      return state;\n    case DELETE:\n      return state;\n    case UPDATE:\n      return state;\n    case SET_WISH_LIST:\n      return {\n        wishList: action.wishList,\n        called: action.month,\n      };\n    case SUCCESS:\n      return {\n        wishMsg: { msg: action.msg, isError: false },       \n      };\n    case FAIL:\n      return {\n        wishMsg: { msg: action.msg, isError: true },       \n      };\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst FloatingAddBtn = ({ movePage }) => {\n  return (\n    <div className=\"floating-btn\" onClick={movePage}>\n      <AddCircleIcon color=\"primary\" style={{ fontSize: 50 }} />\n    </div>\n  );\n};\n\nexport default FloatingAddBtn;\n","\nexport function trimMonth(month) {\n  let result = '';\n\n  if (month) {\n    result = month.substr(0, 1) === '0' ? month.substr(1, 1) : month;\n  }\n\n  return result;\n};\n\nexport function addComma(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport * as cm from 'share/common';\n\nconst WishList = ({\n  curMonth,\n  totalWishAmount,\n  curWishList,\n  actionHandler,\n  showDelBtn,\n  deleteWishList,\n  onEventHandler\n}) => (\n  <>\n    <div className=\"page-title\">\n      {cm.trimMonth(curMonth)}월 장바구니\n    </div>\n    <div className=\"total-amount\">\n      {cm.addComma(totalWishAmount)}원\n    </div>\n    <div className=\"wish-item-list\">\n    { Array.isArray(curWishList) &&\n      curWishList.map((item, index) =>\n        <div key={index} id={item.id} className=\"wish-item\" >\n          <div\n            className={`wish-info${showDelBtn === item.id ? '-deletable' : ''}`}\n            draggable\n            onClick={e => onEventHandler(e, item.id)}\n            onDoubleClick={e => onEventHandler(e, item.id)}\n            onTouchStart={e => onEventHandler(e, item.id)}\n            onTouchEnd={e => onEventHandler(e, item.id)}\n            {...actionHandler}\n          >\n            <div className=\"name\">\n              {item.itemName}\n            </div>\n            <div className=\"price\">\n              {`${cm.addComma(item.itemPrice)}원`}\n            </div>\n          </div>\n          \n          {showDelBtn && showDelBtn === item.id && (\n            <div className=\"icon\">\n              <IconButton onClick={() => deleteWishList(item.id)}>\n                <DeleteIcon />\n              </IconButton>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  </>\n);\n\nexport default WishList;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useSwipeable } from 'react-swipeable';\nimport { readWishList, deleteWish } from 'modules/wishInfo';\n// import * as cm from 'share/common';\nimport FloatingAddBtn from 'share/FloatingAddBtn';\nimport WishList from 'components/WishList';\n\nconst WishListContainer = () => {\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const { userObj, wishList, called } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n    wishList: state.wishInfo.wishList,\n    called: state.wishInfo.called,\n  }));\n\n  const curYear = moment().format('YYYY');\n  const curMonth = moment().format('MM');\n\n  const [curWishList, setCurWishList] = useState([]);\n  const [totalWishAmount, setTotalWishAmount] = useState(0);\n  const [showDelBtn, setShowDelBtn] = useState(false);\n  const [touchPosition, setTouchPosition] = useState({ x: '', y: '' });\n\n  const moveToAddWishList = () => {\n    history.push({\n      pathname: '/add',\n      state: { type: 'wishList', actionType: 'add' },\n    });\n  };\n  \n  const deleteWishList = id => {\n    dispatch(deleteWish({\n      userEmail: userObj.user.email,\n      month: moment().format(`${curYear}-${curMonth}`),\n      id,\n    }));\n  };\n\n  const onEventHandler = (e, id) => {\n    // console.log(e.type);\n\n    switch (e.type) {\n      case 'touchstart':\n        setTouchPosition({\n          x: e.changedTouches[0].pageX,\n          y: e.changedTouches[0].pageY\n        });\n        break;\n      case 'touchend':\n        let targetId;\n        \n        const distanceX = Math.abs(touchPosition.x - e.changedTouches[0].pageX);\n        const distanceY = Math.abs(touchPosition.y - e.changedTouches[0].pageY);\n\n        if ( distanceX > distanceY && showDelBtn !== id ) {\n          targetId = id;\n        } else {\n          targetId = '';\n        }\n\n        setShowDelBtn(targetId);\n        setTouchPosition({ x: '', y: '' });\n        break;\n      case 'click':\n        // 삭제 아이콘 활성화 상태일 경우에만 삭제 아이콘 비활성화 상태로 변경 처리\n        // if (showDelBtn === id) {\n        //   setShowDelBtn(false);\n        // }\n        break;\n      case 'dblclick':\n        // 상세 페이지로 이동\n        break;\n      case 'dragend':\n        // swipe 효과 위해 drag 종료 시 삭제 아이콘 활성화\n        // if (showDelBtn !== id) {\n        //   setShowDelBtn(id);\n        // }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const actionHandler = useSwipeable({\n    onTap: e => console.log(e),\n    onSwipedLeft: e => console.log(e),\n  })\n  \n  useEffect(() => {\n    // 선택한 연월 정보를 조회한 적이 없을 시 \n    if ( called === '' || called !== `${curYear}-${curMonth}` ) {\n      dispatch(readWishList({ userEmail: userObj.user.email, month: moment().format(`${curYear}-${curMonth}`) }));\n    }\n  }, [userObj]);\n\n  useEffect(() => {\n    const totalAmount = Array.isArray(wishList) ? wishList.reduce((sum, item) => sum += item.itemPrice, 0) : 0;\n\n    setCurWishList(wishList);\n    setTotalWishAmount(totalAmount);\n  }, [wishList]);\n\n  return (\n    <div className=\"child-container\">\n      <WishList\n        curMonth={curMonth}\n        totalWishAmount={totalWishAmount}\n        curWishList={curWishList}\n        actionHandler={actionHandler}\n        showDelBtn={showDelBtn}\n        deleteWishList={deleteWishList}\n        onEventHandler={onEventHandler}\n      />\n      <FloatingAddBtn movePage={moveToAddWishList} />\n    </div>\n  );\n};\n\nexport default WishListContainer;","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'income/READ';\n// const REGISTER = 'moneyInfo/REGISTER';\n// const LOGIN = 'userInfo/LOGIN';\n// const LOGOUT = 'userInfo/LOGOUT';\n// const SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\n// const SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\n\n// Action creators\nexport const readIncome = obj => ({ type: READ, obj });\n// export const registerNewAccount = obj => ({ type: REGISTER, obj });\n// export const login = obj => ({ type: LOGIN, obj });\n// export const logout = () => ({ type: LOGOUT });\n// export const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\n// export const setUserLogout = () => ({ type: SET_USER_LOGOUT });\n\n// saga\nfunction* readIncomeSaga(action) {\n  try {\n    console.log(action);\n  } catch (e) {\n    console.log(e);\n  }\n}\n// function* registerNewAccountSaga(action) {  \n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* loginSaga(action) {\n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* logoutSaga() {\n//   try {\n//     yield call(rsf.auth.signOut);\n//     yield put({ type: SET_USER_LOGOUT });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\nexport function* incomeInfoSaga() {\n  yield takeEvery(READ, readIncomeSaga);\n  // yield takeEvery(REGISTER, registerNewAccountSaga);\n  // yield takeEvery(LOGIN, loginSaga);\n  // yield takeEvery(LOGOUT, logoutSaga);\n}\n\n// initial states\nconst initialState = {\n  incomeObj: {},\n};\n\n// reducers\nexport default function incomeInfo(state = initialState, action) {\n  switch (action.type) {\n    case READ:\n      return state;\n    // case REGISTER:\n    //   return state;\n    // case LOGIN:\n    //   return state;\n    // case LOGOUT:\n    //   return state;\n    // case SET_USER_LOGIN:\n    //   return {\n    //     isLoggedIn: true,\n    //     userObj: action.user,\n    //   };\n    // case SET_USER_LOGOUT:\n    //   return {\n    //     isLoggedIn: false,\n    //     useObj: {},\n    //   };\n    default:\n      return state;\n  }\n};","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { readIncome } from '../modules/incomeInfo';\nimport { registerNewAccount, login } from 'modules/userInfo';\n\nconst IncomeContainer = () => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(login());\n  }, []);\n  \n  return (\n    <div>\n      income\n    </div>\n  );\n};\n\nexport default IncomeContainer;","import React from 'react';\n\nconst ExpenseContainer = () => {\n\n  return (\n    <div>Expense</div>\n  );\n};\n\nexport default ExpenseContainer;","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\n\nconst ItemDetail = ({ item, onChangeItem, onClickPrevBtn, onClickSubmitBtn }) => {\n  return (\n    <div className=\"item-container\">\n      <div className=\"item-detail\">\n        <TextField\n          required\n          name=\"itemName\"\n          label=\"품목명\"\n          value={item.itemName}\n          onChange={onChangeItem}\n        />\n        <TextField\n          required\n          name=\"itemPrice\"\n          label=\"금액\"\n          value={item.itemPrice}\n          onChange={onChangeItem}\n        />\n        <TextField\n          name=\"priority\"\n          label=\"우선순위\"\n          value={item.priority}\n          onChange={onChangeItem}\n        />\n        <TextField\n          name=\"remark\"\n          label=\"비고\"\n          value={item.remark}\n          onChange={onChangeItem}\n        />       \n      </div>\n      \n      <div className=\"item-btn-area\">\n        <Button\n          variant=\"contained\"\n          onClick={onClickPrevBtn}\n        >\n          돌아가기\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClickSubmitBtn}\n        >\n          저장\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemDetail;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { registerNewWish } from 'modules/wishInfo';\nimport ItemDetail from 'components/ItemDetail';\n\nconst ItemDetailContainer = () => {\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const { state: { type, actionType } } = location;\n\n  const { userObj, actionObj } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n    actionObj: state.wishInfo.actionObj,\n  }));\n\n  const [item, setItem] = useState({\n    priority: '',\n    itemName: '',\n    itemPrice: 0,\n    remark: '',\n  });\n\n  const curYm = moment().format('YYYY-MM');\n\n  // 항목 변경 이벤트 핸들러\n  const onChangeItem = (e) => {\n    const { target: { name, value } } = e;\n    let newValue = value;\n\n    switch (name) {\n      case 'priority':\n      case 'itemPrice':\n        newValue = Number(newValue.replace(/[^0-9]/gi, ''));\n        break;\n      case 'itemName':\n      case 'remark':\n        break;\n      default:\n        break;\n    }\n\n    setItem({\n      ...item,\n      [name]: newValue,\n    });\n  };\n\n  // 돌아가기 버튼 클릭 이벤트 핸들러\n  const onClickPrevBtn = () => {\n    history.push(`/${type}`);\n  };\n\n  // 저장 버튼 클릭 이벤트 핸들러\n  const onClickSubmitBtn = () => {\n    const action = mapActions();\n    const param = mapParamObj();\n    dispatch(action(param));\n  };\n\n  // action 유형에 따라 module action mapping\n  const mapActions = () => {\n    let action = '';\n\n    const wishActionMap = new Map([\n      ['add', registerNewWish],\n    ]);\n\n    switch (type) {\n      case 'wishList':\n        action = wishActionMap.get(actionType);\n        break;\n      default:\n        break;\n    }\n\n    return action;\n  };\n\n  // action 유형에 따라 parameter mapping\n  const mapParamObj = () => {\n    let paramObj = {};\n\n    switch (type) {\n      case 'wishList':\n        if (actionType === 'add') {\n          paramObj = {\n            userEmail: userObj.user.email,\n            item,\n            curYm,\n          };\n        }\n        break;\n      default:\n        break;\n    }\n\n    return paramObj;\n  };\n\n  // detail page title mapping\n  const mapPageTitle = () => {\n    let typeText = '';\n    let actionText = '';\n\n    switch (type) {\n      case 'wishList':\n        typeText = '장바구니';\n        break;\n      default:\n        break;\n    }\n\n    switch (actionType) {\n      case 'add':\n        actionText = '추가';\n        break;\n      default:\n        break;\n    }\n\n    return `${typeText} ${actionText}`;\n  };\n\n  useEffect(() => {\n    if (actionObj) {\n      const { type = '', isSucceeded = false, msg = '' } = actionObj;\n\n      if (isSucceeded && actionType === type) {\n        console.log(msg);\n      }\n    }\n  }, [actionObj]);\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"page-title\">{mapPageTitle()}</div>\n      <ItemDetail\n        item={item}\n        onChangeItem={onChangeItem}\n        onClickPrevBtn={onClickPrevBtn}\n        onClickSubmitBtn={onClickSubmitBtn}\n      />\n    </div>\n  )\n};\n\nexport default ItemDetailContainer;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst ToastMessage = () => {\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const { isLoggedIn, authMsg, wishMsg } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n    authMsg: state.userInfo.authMsg,  // 신규등록 or 로그인 시 에러 메시지\n    wishMsg: state.wishInfo.wishMsg,  // 장바구니 스토어 액션 처리 후 메시지\n  }));\n\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('error');\n\n  const toggleAlert = () => setOpenAlert(!openAlert);\n\n  useEffect(() => {\n    // 로그인 or 신규가입 과정에서 에러 발생 시 서버 에러 메시지 출력\n    const { msg, isError } = authMsg;\n    if (!isLoggedIn && history.location.pathname === '/' && msg !== '' && isError ) {\n      setAlertMessage(msg);\n      setOpenAlert(true);\n    }\n  }, [authMsg.msg]);\n\n  useEffect(() => {\n    // 장바구니 등록/삭제/수정 처리 후 처리 메시지 출력\n    if (wishMsg) {\n      const { msg, isError } = wishMsg;\n      if (isLoggedIn && msg !== '') {\n        setAlertMessage(msg);\n        if (!isError) {\n          setAlertType('success');\n        }\n        setOpenAlert(true);\n      }\n    }\n    \n  }, [wishMsg]);\n\n\n  console.log(location);\n  \n  return (\n    <Snackbar open={openAlert} autoHideDuration={3000} onClose={toggleAlert}>\n      <MuiAlert severity={alertType} elevation={6} variant=\"filled\" >\n        {alertMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n\nexport default ToastMessage;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport NavBar from 'components/NavBar';\nimport HomeContainer from 'containers/HomeContainer';\nimport AuthContainer from 'containers/AuthContainer';\nimport WishListContainer from \"containers/WishListContainer\";\nimport IncomeContainer from \"containers/IncomeContainer\";\nimport ExpenseContainer from \"containers/ExpenseContainer\";\nimport ItemDetailContainer from \"containers/ItemDetailContainer\";\nimport ToastMessage from \"share/ToastMessage\";\n\nconst AppRouter = () => {\n  const { isLoggedIn } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n  }));\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <NavBar />\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <HomeContainer />\n            </Route>\n            <Route exact path=\"/wishList\">\n              <WishListContainer />\n            </Route>\n            <Route exact path=\"/income\">\n              <IncomeContainer />\n            </Route>\n            <Route exact path=\"/expense\">\n              <ExpenseContainer />\n            </Route>\n            <Route exact path=\"/add\">\n              <ItemDetailContainer />\n            </Route>\n            <ToastMessage />\n          </>\n        ) : (\n            <>\n              <Route exact path=\"/\">\n                <AuthContainer />\n                <ToastMessage />\n              </Route>\n              <Redirect to={{ pathname: '/' }} />\n            </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;","import React from 'react';\nimport AppRouter from './router/AppRouter';\nimport './style/style.scss';\n\nfunction App() {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'moneyInfo/READ';\n// const REGISTER = 'moneyInfo/REGISTER';\n// const LOGIN = 'userInfo/LOGIN';\n// const LOGOUT = 'userInfo/LOGOUT';\n// const SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\n// const SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\n\n// Action creators\nexport const readMoneyInfo = obj => ({ type: READ, obj });\n// export const registerNewAccount = obj => ({ type: REGISTER, obj });\n// export const login = obj => ({ type: LOGIN, obj });\n// export const logout = () => ({ type: LOGOUT });\n// export const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\n// export const setUserLogout = () => ({ type: SET_USER_LOGOUT });\n\n// saga\n// function* registerNewAccountSaga(action) {  \n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* loginSaga(action) {\n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* logoutSaga() {\n//   try {\n//     yield call(rsf.auth.signOut);\n//     yield put({ type: SET_USER_LOGOUT });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\nexport function* userInfoSaga() {\n  // yield takeEvery(REGISTER, registerNewAccountSaga);\n  // yield takeEvery(LOGIN, loginSaga);\n  // yield takeEvery(LOGOUT, logoutSaga);\n}\n\n// initial states\nconst initialState = {\n  isLoggedIn: false,\n  userObj: {},\n};\n\n// reducers\nexport default function UserInfo(state = initialState, action) {\n  switch (action.type) {\n    // case REGISTER:\n    //   return state;\n    // case LOGIN:\n    //   return state;\n    // case LOGOUT:\n    //   return state;\n    // case SET_USER_LOGIN:\n    //   return {\n    //     isLoggedIn: true,\n    //     userObj: action.user,\n    //   };\n    // case SET_USER_LOGOUT:\n    //   return {\n    //     isLoggedIn: false,\n    //     useObj: {},\n    //   };\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\n\nimport userInfo, { userInfoSaga } from './userInfo';\nimport moneyInfo from './moneyInfo';\nimport wishInfo, { wishInfoSaga } from './wishInfo';\nimport incomeInfo, { incomeInfoSaga } from './incomeInfo';\n\nconst rootReducer = combineReducers({\n  userInfo,\n  moneyInfo,\n  wishInfo,\n  incomeInfo\n});\n\nexport function* rootSaga() {\n  yield all([userInfoSaga(), wishInfoSaga(), incomeInfoSaga()]);\n  \n}\n\nexport default rootReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer, { rootSaga } from './modules';\n\nconst sagaMiddleware = createSagaMiddleware(); // 사가 미들웨어를 만듭니다.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware)\n  )\n);\n\nsagaMiddleware.run(rootSaga); // 루트 사가 실행\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}