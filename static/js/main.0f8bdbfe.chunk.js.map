{"version":3,"sources":["fBase.js","modules/userInfo.js","components/NavBar.js","share/common.js","components/Home.js","containers/HomeContainer.js","components/Auth.js","containers/AuthContainer.js","modules/incomeInfo.js","share/FloatingAddBtn.js","components/ItemList.js","containers/IncomeContainer.js","modules/expenseInfo.js","containers/ExpenseContainer.js","components/ItemDetail.js","containers/ItemDetailContainer.js","share/ToastMessage.js","router/AppRouter.js","App.js","modules/index.js","index.js"],"names":["moneyKindergarten","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","dbService","firestore","rsf","ReduxSagaFirebase","registerNewAccountSaga","loginSaga","logoutSaga","setErrorMsgSaga","userInfoSaga","REGISTER","LOGIN","LOGOUT","SET_USER_LOGIN","SET_USER_LOGOUT","FAIL","FAIL_ON_VALIDATION","SET_ERROR_MSG","setErrorMsg","msg","type","action","obj","email","password","call","auth","createUserWithEmailAndPassword","user","put","message","signInWithEmailAndPassword","signOut","takeEvery","initialState","isLoggedIn","userObj","authMsg","isError","NavBar","history","useHistory","dispatch","useDispatch","useState","openDrawer","setOpenDrawer","useSelector","state","userInfo","toggleDrawer","onMovePage","page","push","className","IconButton","onClick","Close","Menu","MonetizationOn","List","ListItem","button","Divider","trimMonth","month","result","substr","addComma","number","toString","replace","Home","HomeContaier","moment","format","curYear","setCurYear","curMonth","setCurMonth","totalAmount","onClickArrowBtn","flag","newlySelectedMonth","subtract","add","ArrowBackIos","cm","id","ArrowForwardIos","Auth","isOnRegister","toggleRegisterProcess","onChangeValue","onPressKey","handleLogin","onClickRegisterBtn","Android","fontSize","AccountBalance","Apple","TextField","name","label","required","value","onChange","onKeyPress","Button","variant","color","size","AuthContainer","setIsOnRegister","setEmail","setPassword","onRegister","registerNewAccount","onLogin","login","checkValidation","isValid","e","target","charCode","document","querySelector","focus","readIncomeListSaga","registerNewIncomeSaga","deleteIncomeSaga","updateIncomeSaga","incomeInfoSaga","READ","DELETE","UPDATE","SET_INCOME_LIST","SUCCESS","registerNewIncome","updateIncome","a","collection","where","get","incomeRefs","docs","tempArr","forEach","doc","exists","data","incomeList","console","log","item","curYm","ym","then","catch","error","delete","update","incomeMsg","FloatingAddBtn","movePage","style","ItemList","curItemList","showDelBtn","deleteItem","onEventHandler","Array","isArray","map","index","draggable","onTouchStart","onTouchEnd","itemTypeName","itemAmount","itemPrice","Delete","IncomeContainer","location","useLocation","incomeInfo","curIncomeList","setCurIncomeList","totalIncomeAmount","setTotalIncomeAmount","setShowDelBtn","x","y","touchPosition","setTouchPosition","getIncomeList","useCallback","setIncomeList","reduce","sum","useEffect","targetMonth","split","tempYear","tempMonth","undefined","changedTouches","pageX","pageY","xPos","yPos","selectedItem","find","pathname","actionType","targetItem","updateIncomeList","distanceX","Math","abs","distanceY","readExpenseListSaga","registerNewExpenseSaga","deleteExpenseSaga","updateExpenseSaga","expenseInfoSaga","SET_EXPENSE_LIST","registerNewExpense","updateExpense","expenseRefs","expenseList","ExpenseContainer","expenseInfo","curExpenseList","setCurExpenseList","totalExpenseAmount","setTotalExpenseAmount","getExpenseList","setExpenseList","updateExpenseList","registerLocale","ko","ItemDetail","onChangeItem","onChangeDate","onClickPrevBtn","onClickSubmitBtn","FormControl","fullWidth","InputLabel","htmlFor","NativeSelect","defaultValue","itemType","inputProps","locale","selected","date","dateFormat","customInput","popperModifiers","preventOverflow","enabled","popperPlacement","remark","ItemDetailContainer","tempItem","Date","setItem","itemTypeMap","Map","mapActions","incomeActionMap","expenseActionMap","typeText","actionText","tempYm","Number","mapPageTitle","newValue","paramItem","ToastMessage","expenseMsg","openAlert","setOpenAlert","alertMessage","setAlertMessage","alertType","setAlertType","Snackbar","open","autoHideDuration","onClose","severity","elevation","AppRouter","basename","exact","path","HomeContainer","to","App","rootSaga","rootReducer","combineReducers","all","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0f8bdbfe.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport ReduxSagaFirebase from 'redux-saga-firebase'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst moneyKindergarten = firebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const rsf = new ReduxSagaFirebase(moneyKindergarten);\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { rsf } from \"../fBase\";\n\n// Action types\nconst REGISTER = 'userInfo/REGISTER';\nconst LOGIN = 'userInfo/LOGIN';\nconst LOGOUT = 'userInfo/LOGOUT';\nconst SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\nconst SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\nconst FAIL = 'userInfo/FAIL';\nconst FAIL_ON_VALIDATION = 'userInfo/FAIL_ON_VALIDATION';\nconst SET_ERROR_MSG = 'userInfo/SET_ERROR_MSG';\n\n// Action creators\nexport const registerNewAccount = obj => ({ type: REGISTER, obj });\nexport const login = obj => ({ type: LOGIN, obj });\nexport const logout = () => ({ type: LOGOUT });\nexport const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\nexport const setUserLogout = () => ({ type: SET_USER_LOGOUT });\nexport const setErrorMsg = msg => ({ type: SET_ERROR_MSG, msg });\n\n// saga\nfunction* registerNewAccountSaga(action) {  \n  try {\n    const { email, password } = action.obj;\n    const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n    yield put({ type: SET_USER_LOGIN, user });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* loginSaga(action) {\n  try {\n    const { email, password } = action.obj;\n    const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n    yield put({ type: SET_USER_LOGIN, user });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(rsf.auth.signOut);\n    yield put({ type: SET_USER_LOGOUT });\n  } catch (e) {\n    yield put({ type: FAIL, msg: e.message });\n  }\n}\n\nfunction* setErrorMsgSaga(action) {\n  yield put({ type: FAIL_ON_VALIDATION, msg: action.msg });\n}\n\nexport function* userInfoSaga() {\n  yield takeEvery(REGISTER, registerNewAccountSaga);\n  yield takeEvery(LOGIN, loginSaga);\n  yield takeEvery(LOGOUT, logoutSaga);\n  yield takeEvery(SET_ERROR_MSG, setErrorMsgSaga);\n}\n\n// initial states\nconst initialState = {\n  isLoggedIn: false,\n  userObj: {},\n  authMsg: { msg: '', isError: false },\n};\n\n// reducers\nexport default function UserInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case LOGIN:\n      return state;\n    case LOGOUT:\n      return state;\n    case SET_USER_LOGIN:\n      return {\n        isLoggedIn: true,\n        userObj: action.user,\n        authMsg: { msg: '', isError: false },\n      };\n    case SET_USER_LOGOUT:\n      return {\n        isLoggedIn: false,\n        userObj: {},\n        authMsg: { msg: '', isError: false },\n      };\n    case FAIL:\n      return {\n        authMsg: { msg: action.msg, isError: true },\n      };\n    case SET_ERROR_MSG:\n      return state;\n    case FAIL_ON_VALIDATION:\n      return {\n        authMsg: { msg: action.msg, isError: true },\n      };\n    default:\n      return state;\n  }\n};","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, List, ListItem, Divider } from '@material-ui/core';\nimport { Menu, Close, MonetizationOn } from '@material-ui/icons';\nimport { logout } from 'modules/userInfo';\n\nconst NavBar = () => {\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  \n  const { isLoggedIn } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n  }));\n\n  const toggleDrawer = () => {\n    setOpenDrawer(!openDrawer);\n  };\n\n  const onMovePage = (page) => {\n    toggleDrawer();\n    history.push(`/${page}`);\n  };\n\n  const onLogout = () => {\n    toggleDrawer();\n    dispatch(logout());\n  }\n\n  return (\n    <>\n      <nav className=\"nav-container\">\n        {isLoggedIn ? (\n          <IconButton onClick={toggleDrawer}>\n          {openDrawer ? (\n            <Close />\n          ) : (\n            <Menu />\n          )}\n        </IconButton>\n        ) : (\n          <IconButton>\n            <MonetizationOn />\n          </IconButton>\n        )}\n        <span className=\"app-title\">브카 이용내역서</span>\n      </nav>\n      {openDrawer && (\n        <div className=\"nav-drawer\">\n          <List>\n            <ListItem\n              button\n              onClick={() => onMovePage('')}\n            >\n              <span>요약</span>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => onMovePage('expense')}\n            >\n              <span>사용</span>\n            </ListItem>\n            <ListItem\n              button\n              className=\"nav-drawer-last-item\"\n              onClick={() => onMovePage('income')}\n            >\n              <span>충전</span>\n            </ListItem>\n            {isLoggedIn && (\n              <>\n                <Divider />\n                <ListItem button onClick={onLogout}><span>로그아웃</span></ListItem>\n              </>\n            )}\n          </List>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NavBar;\n","\nexport function trimMonth(month) {\n  let result = '';\n\n  if (month) {\n    result = month.substr(0, 1) === '0' ? month.substr(1, 1) : month;\n  }\n\n  return result;\n};\n\nexport function addComma(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\nconst Home = () => {\n\n  return (\n    <div>\n      hhhh\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport * as cm from 'share/common';\nimport { IconButton } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\n\nimport Home from 'components/Home';\n\nconst HomeContaier = () => {\n  const dispatch = useDispatch();\n  \n  const { userObj } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n  }));\n\n  const [curYear, setCurYear] = useState(moment().format('YYYY'));\n  const [curMonth, setCurMonth] = useState(moment().format('MM'));\n  const [totalAmount, setTotalAmount] = useState(0);\n  \n  // 상단 화살표 버튼 클릭 이벤트 핸들러\n  const onClickArrowBtn = flag => {\n    let newlySelectedMonth = '';\n\n    if (flag === 'prev') {\n      // 왼쪽 화살표 클릭 시 이전달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).subtract(1, 'months');\n    } else {\n      // 오른쪽 화살표 클릭 시 다음달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).add(1, 'months');\n    }\n    \n    setCurYear(moment(newlySelectedMonth).format('YYYY'));\n    setCurMonth(moment(newlySelectedMonth).format('MM'));\n  };\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"selected-month-box\">\n        <div className=\"vertical-empty-space\" />\n\n        <div className=\"selected-month-info-box\">\n          <IconButton onClick={() => onClickArrowBtn('prev')}>\n            <ArrowBackIos />\n          </IconButton>\n          \n          <div className=\"selected-month-texts\">\n            <div className=\"title\">\n              {cm.trimMonth(curMonth)}월 잔액\n            </div>\n            <div className=\"amount\">\n              {cm.addComma(totalAmount)}원\n            </div>\n          </div>\n          \n          <IconButton id=\"next\" onClick={() => onClickArrowBtn('next')}>\n            <ArrowForwardIos />\n          </IconButton>\n        </div>\n      </div>\n      \n      <Home />\n    </div>\n  );\n};\n\nexport default HomeContaier;\n","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { Android, AccountBalance, Apple } from '@material-ui/icons';\n\nconst Auth = ({\n  isOnRegister,\n  email, password,\n  toggleRegisterProcess, onChangeValue,\n  onPressKey, handleLogin, onClickRegisterBtn,\n}) => (\n  <div className=\"auth-container\">\n\n    <div className=\"icon-area\">\n      <Android fontSize=\"large\" />\n      <AccountBalance fontSize=\"large\" />\n      <Apple fontSize=\"large\" />\n    </div>\n\n    <div className=\"input-area\">\n      <TextField\n        name=\"email\"\n        type=\"text\"\n        label=\"Email address\"\n        required\n        value={email}\n        onChange={onChangeValue}\n        onKeyPress={onPressKey}\n      />\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        label=\"password\"\n        required\n        value={password}\n        onChange={onChangeValue}\n        onKeyPress={onPressKey}\n      />\n    </div>\n\n    <div className=\"btn-area\">\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        onClick={isOnRegister ? onClickRegisterBtn : handleLogin}\n      >\n        {isOnRegister ? '신규 등록' : '로그인'}\n      </Button>\n      <div className=\"spacing-area\" />\n      <Button\n        variant=\"contained\"\n        color=\"default\"\n        size=\"large\"\n        onClick={toggleRegisterProcess}\n      >\n        {isOnRegister ? '취소' : '계정 생성'}\n      </Button>\n    </div>\n  </div>\n);\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerNewAccount, login, setErrorMsg } from 'modules/userInfo';\nimport Auth from 'components/Auth';\n\nconst AuthContainer = () => {\n\n  const dispatch = useDispatch();\n\n  const [isOnRegister, setIsOnRegister] = useState(false);  // 신규등록/로그인 전환\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onRegister = obj => dispatch(registerNewAccount(obj));\n  const onLogin = obj => dispatch(login(obj));\n\n  const toggleRegisterProcess = () => setIsOnRegister(!isOnRegister);\n\n  // 이메일/비밀번호 입력창 변경 이벤트 핸들러\n  const onChangeValue = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  // 엔터키 입력 이벤트 핸들러\n  const onPressKey = e => {\n    const { charCode, target: { name } } = e;\n    \n    if (charCode === 13) { \n      if (name === 'email') {    \n        const target = document.querySelector('#password');\n        if (target) {\n          target.focus();\n        }\n      } else if (name === 'password') {\n        handleLogin();\n      }\n    } \n  };\n\n  // 정합성 체크\n  const checkValidation = () => {\n    let isValid = true;\n    if (email === '') {\n      dispatch(setErrorMsg('이메일 주소를 입력해주세요'));\n      isValid = false;\n    } else if (password === '') {\n      dispatch(setErrorMsg('비밀번호를 입력해주세요'));\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  // 로그인 이벤트 핸들러\n  const handleLogin = () => {\n    const isValid = checkValidation();\n\n    if (isValid) {\n      onLogin({ email, password });\n    }\n  };\n\n  // 신규 등록 버튼 클릭 이벤트 핸들러\n  const onClickRegisterBtn = () => {\n    const isValid = checkValidation();\n\n    if (isValid) {\n      onRegister({ email, password });\n    }\n  };\n\n  return (\n    <>\n      <Auth\n        isOnRegister={isOnRegister}\n        email={email}\n        password={password}\n        toggleRegisterProcess={toggleRegisterProcess}\n        onChangeValue={onChangeValue}\n        onPressKey={onPressKey}\n        handleLogin={handleLogin}\n        onClickRegisterBtn={onClickRegisterBtn}\n      />\n    </>\n  );\n\n};\n\nexport default AuthContainer;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'incomeInfo/READ';\nconst REGISTER = 'incomeInfo/REGISTER';\nconst DELETE = 'incomeInfo/DELETE';\nconst UPDATE = 'incomeInfo/UPDATE';\nconst SET_INCOME_LIST = 'incomeInfo/SET_INCOME_LIST';\nconst SUCCESS = 'incomeInfo/SUCCESS';\nconst FAIL = 'incomeInfo/FAIL';\n\n// Action creators\nexport const readIncomeList = obj => ({ type: READ, ...obj });\nexport const registerNewIncome = obj => ({ type: REGISTER, obj });\nexport const deleteIncome = obj => ({ type: DELETE, obj });\nexport const updateIncome = obj => ({ type: UPDATE, obj });\n\n// saga\nfunction* readIncomeListSaga(action) {\n  try {\n    const { month } = action;\n    \n    const incomeList = yield call(async () => {\n      const incomeRefs = await dbService.collection('income').where('ym', '==', month).get();\n\n      const { docs } = incomeRefs;\n      \n      if (docs) {\n        const tempArr = [];\n\n        docs.forEach(doc => {\n          if (doc.exists) {\n            tempArr.push({ id: doc.id, ...doc.data() });\n          }\n        });\n\n        return tempArr;\n      }\n    });\n\n    yield put({ type: SET_INCOME_LIST, incomeList });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* registerNewIncomeSaga(action) {\n  try {\n    const { item, curYm } = action.obj;\n\n    const result = yield call(async () => {\n      return dbService.collection('income')\n        .add({ ...item, ym: curYm })\n        .then(result => result)\n        .catch(error => {\n          console.log(error);\n          return null;\n        });\n    });\n    \n    if (result) {\n      yield put({ type: SUCCESS, msg: '등록했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* deleteIncomeSaga(action) {\n  try {\n    const { obj: { month, id } } = action;\n\n    const result = yield call(async () => {\n      return dbService.collection('income').doc(id)\n        .delete()\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '삭제했습니다!' });\n      yield put({ type: READ, month: month });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n    \n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* updateIncomeSaga(action) {\n  try {\n    const { item } = action.obj;\n    \n    const result = yield call(async () => {\n      return dbService.collection('income')\n        .doc(item.id).update({ ...item })\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '수정했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* incomeInfoSaga() {\n  yield takeEvery(REGISTER, registerNewIncomeSaga);\n  yield takeEvery(READ, readIncomeListSaga);\n  yield takeEvery(DELETE, deleteIncomeSaga);\n  yield takeEvery(UPDATE, updateIncomeSaga);\n}\n\n// initial states\nconst initialState = {\n  incomeList: [],\n  incomeMsg: { msg: '', isError: false },\n};\n\n// reducers\nexport default function incomeInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case READ:\n      return state;\n    case DELETE:\n      return state;\n    case UPDATE:\n      return state;\n    case SET_INCOME_LIST:\n      return {\n        incomeList: action.incomeList,\n      };\n    case SUCCESS:\n      return {\n        incomeMsg: { msg: action.msg, isError: false },       \n      };\n    case FAIL:\n      return {\n        incomeMsg: { msg: action.msg, isError: true },       \n      };\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst FloatingAddBtn = ({ movePage }) => {\n  return (\n    <div className=\"floating-btn\" onClick={movePage}>\n      <AddCircleIcon color=\"primary\" style={{ fontSize: 50 }} />\n    </div>\n  );\n};\n\nexport default FloatingAddBtn;\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport * as cm from 'share/common';\n\nconst ItemList = ({\n  type,\n  curItemList,\n  showDelBtn,\n  deleteItem,\n  onEventHandler,\n}) => (\n  <>\n    <div className=\"item-list-container\">\n    { Array.isArray(curItemList) &&\n      curItemList.map((item, index) =>\n        <div key={index} id={item.id} className=\"item-info-container\" >\n          <div\n            className={`item-info${showDelBtn === item.id ? '-deletable' : ''}`}\n            draggable\n            onTouchStart={e => onEventHandler(e, item.id)}\n            onTouchEnd={e => onEventHandler(e, item.id)}\n          >\n            <div className=\"item-text\">\n              { item.itemTypeName }\n            </div>\n            <div>\n              { type === 'income' ? `${cm.addComma(item.itemAmount)}원` : `${cm.addComma(item.itemPrice)}원`}\n            </div>\n          </div>\n\n          {showDelBtn && showDelBtn === item.id && (\n            <div className=\"icon\">\n              <IconButton onClick={() => deleteItem(item.id)}>\n                <Delete />\n              </IconButton>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  </>\n);\n\nexport default ItemList;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { readIncomeList, deleteIncome } from 'modules/incomeInfo';\nimport * as cm from 'share/common';\nimport FloatingAddBtn from 'share/FloatingAddBtn';\nimport ItemList from 'components/ItemList';\nimport { IconButton } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\n\nconst IncomeContainer = () => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const { incomeList } = useSelector(state => ({\n    incomeList: state.incomeInfo.incomeList,\n  }));\n\n  const [curYear, setCurYear] = useState(moment().format('YYYY'));\n  const [curMonth, setCurMonth] = useState(moment().format('MM'));\n  const [curIncomeList, setCurIncomeList] = useState([]);\n  const [totalIncomeAmount, setTotalIncomeAmount] = useState(0);\n  const [showDelBtn, setShowDelBtn] = useState(false);\n  const [touchPosition, setTouchPosition] = useState({ x: '', y: '' });\n\n  // 상단 화살표 버튼 클릭 이벤트 핸들러\n  const onClickArrowBtn = flag => {\n    let newlySelectedMonth = '';\n\n    if (flag === 'prev') {\n      // 왼쪽 화살표 클릭 시 이전달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).subtract(1, 'months');\n    } else {\n      // 오른쪽 화살표 클릭 시 다음달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).add(1, 'months');\n    }\n    \n    setCurYear(moment(newlySelectedMonth).format('YYYY'));\n    setCurMonth(moment(newlySelectedMonth).format('MM'));\n  };\n\n  // 추가 버튼 클릭 이벤트 핸들러\n  const moveToAddIncomeList = () => {\n    history.push({\n      pathname: '/add',\n      state: { type: 'income', actionType: 'add', targetMonth: `${curYear}-${curMonth}` },\n    });\n  };\n\n  // 상세 정보 조회 이벤트 핸들러\n  const updateIncomeList = id => {\n    const selectedItem = Array.isArray(curIncomeList) && curIncomeList.find(item => item.id === id);\n\n    if (selectedItem) {\n      history.push({\n        pathname: '/add',\n        state: {\n          type: 'income',\n          actionType: 'update',\n          targetItem: selectedItem,\n          targetMonth: `${curYear}-${curMonth}`\n        },\n      });\n    }\n  };\n  \n  // 삭제 버튼 클릭 이벤트 핸들러\n  const deleteIncomeList = id => {\n    dispatch(deleteIncome({\n      month: moment().format(`${curYear}-${curMonth}`),\n      id,\n    }));\n  };\n\n  // 리스트 영역 내 터치 이벤트 핸들러\n  const onEventHandler = (e, id) => {\n\n    switch (e.type) {\n      case 'touchstart':\n        // 터치 이벤트 시작 시 처리\n        setTouchPosition({\n          x: e.changedTouches[0].pageX,\n          y: e.changedTouches[0].pageY\n        });\n        break;\n      case 'touchend':\n        // 터치 이벤트 종료 시 처리\n        const xPos = e.changedTouches[0].pageX;\n        const yPos = e.changedTouches[0].pageY;\n\n        if (touchPosition.x === xPos && touchPosition.y === yPos) {\n          // 동일 위치 터치 시 상세정보 조회 이벤트 트리거\n          if (showDelBtn) {\n            // 삭제 버튼 활성화 상태에서 터치 시 삭제 버튼 비활성화\n            setShowDelBtn('');\n            setTouchPosition({ x: '', y: '' });\n          } else {\n            // 상세 정보 화면으로 이동\n            updateIncomeList(id);\n          }\n        } else {\n          // 스와이프하여 x 좌표 이동 거리가 더 길 경우 삭제 버튼 활성화\n          let targetId;\n        \n          const distanceX = Math.abs(touchPosition.x - e.changedTouches[0].pageX);\n          const distanceY = Math.abs(touchPosition.y - e.changedTouches[0].pageY);\n\n          if (distanceX > distanceY && showDelBtn !== id) {\n            targetId = id;\n          } else {\n            targetId = '';\n          }\n\n          setShowDelBtn(targetId);\n          setTouchPosition({ x: '', y: '' });\n        }\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 수입 목록 조회\n  const getIncomeList = useCallback(() => {\n    dispatch(readIncomeList({ month: moment().format(`${curYear}-${curMonth}`) }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curYear, curMonth]);\n\n  // 수입 목록 조회 결과 변경 시 세팅\n  const setIncomeList = useCallback(() => {\n    const totalAmount = Array.isArray(incomeList) ? incomeList.reduce((sum, item) => sum += item.itemAmount, 0) : 0;\n\n    setCurIncomeList(incomeList);\n    setTotalIncomeAmount(totalAmount);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [incomeList]);\n\n  // 조회연월 또는 location 변경 시 조회\n  useEffect(() => {\n    if (location && location.state && location.state.targetMonth) {\n      // 페이지 이동 후 데이터 세팅\n      const tempArr = location.state.targetMonth.split('-');\n      const tempYear = tempArr[0];\n      const tempMonth = tempArr[1];\n\n      // 페이지 이동 시 사용하는 파라미터 제거\n      history.replace({ state: undefined });\n\n      setCurYear(tempYear);\n      setCurMonth(tempMonth);\n      \n      getIncomeList();\n    } else {\n      getIncomeList();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curMonth, location]);\n\n  // 수입 데이터 조회 후 항목 세팅\n  useEffect(() => {\n    setIncomeList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [incomeList]);\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"selected-month-box\">\n        <div className=\"vertical-empty-space\" />\n        \n        <div className=\"selected-month-info-box\">\n          <IconButton onClick={() => onClickArrowBtn('prev')}>\n            <ArrowBackIos />\n          </IconButton>\n          \n          <div className=\"selected-month-texts\">\n            <div className=\"title\">\n              {cm.trimMonth(curMonth)}월 충전금액\n            </div>\n            <div className=\"amount\">\n              {cm.addComma(totalIncomeAmount)}원\n            </div>\n          </div>\n          \n          <IconButton id=\"next\" onClick={() => onClickArrowBtn('next')}>\n            <ArrowForwardIos />\n          </IconButton>\n        </div>\n      </div>\n       \n      <ItemList\n        type=\"income\"\n        curItemList={curIncomeList}\n        showDelBtn={showDelBtn}\n        deleteItem={deleteIncomeList}\n        onEventHandler={onEventHandler}\n      />\n      <FloatingAddBtn movePage={moveToAddIncomeList} />\n    </div>\n  );\n};\n\nexport default IncomeContainer;","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'expenseInfo/READ';\nconst REGISTER = 'expenseInfo/REGISTER';\nconst DELETE = 'expenseInfo/DELETE';\nconst UPDATE = 'expenseInfo/UPDATE';\nconst SET_EXPENSE_LIST = 'expenseInfo/SET_EXPENSE_LIST';\nconst SUCCESS = 'expenseInfo/SUCCESS';\nconst FAIL = 'expenseInfo/FAIL';\n\n// Action creators\nexport const readExpenseList = obj => ({ type: READ, ...obj });\nexport const registerNewExpense = obj => ({ type: REGISTER, obj });\nexport const deleteExpense = obj => ({ type: DELETE, obj });\nexport const updateExpense = obj => ({ type: UPDATE, obj });\n\n// saga\nfunction* readExpenseListSaga(action) {\n  try {\n    const { month } = action;\n    \n    const expenseList = yield call(async () => {\n      const expenseRefs = await dbService.collection('expense').where('ym', '==', month).get();\n\n      const { docs } = expenseRefs;\n\n      if (docs) {\n        const tempArr = [];\n\n        docs.forEach(doc => {\n          if (doc.exists) {\n            tempArr.push({ id: doc.id, ...doc.data() });\n          }\n        });\n\n        return tempArr;\n      }\n    })\n\n    yield put({ type: SET_EXPENSE_LIST, expenseList });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* registerNewExpenseSaga(action) {\n  try {\n    const { item, curYm } = action.obj;\n\n    const result = yield call(async () => {\n      return dbService.collection('expense')\n        .add({ ...item, ym: curYm })\n        .then(result => result)\n        .catch(error => {\n          console.log(error);\n          return null;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '등록했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* deleteExpenseSaga(action) {\n  try {\n    const { obj: { month, id } } = action;\n\n    const result = yield call(async () => {\n      return dbService.collection('expense')\n        .doc(id)\n        .delete()\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '삭제했습니다!' });\n      yield put({ type: READ, month: month });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n    \n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* updateExpenseSaga(action) {\n  try {\n    const { item } = action.obj;\n    \n    const result = yield call(async () => {\n      return dbService.collection('expense')\n        .doc(item.id)\n        .update({ ...item })\n        .then(() => {\n          return true;\n        })\n        .catch(error => {\n          console.log(error);\n          return false;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '수정했습니다!' });\n    } else {\n      yield put({ type: FAIL, msg: '처리하지 못했습니다.' });\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* expenseInfoSaga() {\n  yield takeEvery(REGISTER, registerNewExpenseSaga);\n  yield takeEvery(READ, readExpenseListSaga);\n  yield takeEvery(DELETE, deleteExpenseSaga);\n  yield takeEvery(UPDATE, updateExpenseSaga);\n}\n\n// initial states\nconst initialState = {\n  incomeList: [],\n  incomeMsg: { msg: '', isError: false },\n};\n\n// reducers\nexport default function expenseInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case READ:\n      return state;\n    case DELETE:\n      return state;\n    case UPDATE:\n      return state;\n    case SET_EXPENSE_LIST:\n      return {\n        expenseList: action.expenseList,\n      };\n    case SUCCESS:\n      return {\n        expenseMsg: { msg: action.msg, isError: false },       \n      };\n    case FAIL:\n      return {\n        expenseMsg: { msg: action.msg, isError: true },       \n      };\n    default:\n      return state;\n  }\n};","import React, { useEffect, useState, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { readExpenseList, deleteExpense } from 'modules/expenseInfo';\nimport * as cm from 'share/common';\nimport FloatingAddBtn from 'share/FloatingAddBtn';\nimport ItemList from 'components/ItemList';\nimport { IconButton } from '@material-ui/core';\nimport { ArrowBackIos, ArrowForwardIos } from '@material-ui/icons';\n\nconst ExpenseContainer = () => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const { expenseList } = useSelector(state => ({\n    expenseList: state.expenseInfo.expenseList,\n  }));\n\n  const [curYear, setCurYear] = useState(moment().format('YYYY'));\n  const [curMonth, setCurMonth] = useState(moment().format('MM'));\n  const [curExpenseList, setCurExpenseList] = useState([]);\n  const [totalExpenseAmount, setTotalExpenseAmount] = useState(0);\n  const [showDelBtn, setShowDelBtn] = useState(false);\n  const [touchPosition, setTouchPosition] = useState({ x: '', y: '' });\n\n  // 상단 화살표 버튼 클릭 이벤트 핸들러\n  const onClickArrowBtn = flag => {\n    let newlySelectedMonth = '';\n\n    if (flag === 'prev') {\n      // 왼쪽 화살표 클릭 시 이전달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).subtract(1, 'months');\n    } else {\n      // 오른쪽 화살표 클릭 시 다음달 조회\n      newlySelectedMonth = moment(`${curYear}-${curMonth}`).add(1, 'months');\n    }\n    \n    setCurYear(moment(newlySelectedMonth).format('YYYY'));\n    setCurMonth(moment(newlySelectedMonth).format('MM'));\n  };\n\n  // 추가 버튼 클릭 이벤트 핸들러\n  const moveToAddExpenseList = () => {\n    history.push({\n      pathname: '/add',\n      state: { type: 'expense', actionType: 'add', targetMonth: `${curYear}-${curMonth}` },\n    });\n  };\n\n  // 상세 정보 조회 이벤트 핸들러\n  const updateExpenseList = id => {\n    const selectedItem = Array.isArray(curExpenseList) && curExpenseList.find(item => item.id === id);\n\n    if (selectedItem) {\n      history.push({\n        pathname: '/add',\n        state: {\n          type: 'expense',\n          actionType: 'update',\n          targetItem: selectedItem,\n          targetMonth: `${curYear}-${curMonth}`\n        },\n      });\n    }\n  };\n\n  // 삭제 버튼 클릭 이벤트 핸들러\n  const deleteExpenseList = id => {\n    dispatch(deleteExpense({\n      month: moment().format(`${curYear}-${curMonth}`),\n      id,\n    }));\n  };\n\n  // 리스트 영역 내 터치 이벤트 핸들러\n  const onEventHandler = (e, id) => {\n\n    switch (e.type) {\n      case 'touchstart':\n        // 터치 이벤트 시작 시 처리\n        setTouchPosition({\n          x: e.changedTouches[0].pageX,\n          y: e.changedTouches[0].pageY\n        });\n        break;\n      case 'touchend':\n        // 터치 이벤트 종료 시 처리\n        const xPos = e.changedTouches[0].pageX;\n        const yPos = e.changedTouches[0].pageY;\n\n        if (touchPosition.x === xPos && touchPosition.y === yPos) {\n          // 동일 위치 터치 시 상세정보 조회 이벤트 트리거\n          if (showDelBtn) {\n            // 삭제 버튼 활성화 상태에서 터치 시 삭제 버튼 비활성화\n            setShowDelBtn('');\n            setTouchPosition({ x: '', y: '' });\n          } else {\n            // 상세 정보 화면으로 이동\n            updateExpenseList(id);\n          }\n        } else {\n          // 스와이프하여 x 좌표 이동 거리가 더 길 경우 삭제 버튼 활성화\n          let targetId;\n        \n          const distanceX = Math.abs(touchPosition.x - e.changedTouches[0].pageX);\n          const distanceY = Math.abs(touchPosition.y - e.changedTouches[0].pageY);\n\n          if (distanceX > distanceY && showDelBtn !== id) {\n            targetId = id;\n          } else {\n            targetId = '';\n          }\n\n          setShowDelBtn(targetId);\n          setTouchPosition({ x: '', y: '' });\n        }\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  // 수입 목록 조회\n  const getExpenseList = useCallback(() => {\n    dispatch(readExpenseList({ month: moment().format(`${curYear}-${curMonth}`) }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curYear, curMonth]);\n\n  // 수입 목록 조회 결과 변경 시 세팅\n  const setExpenseList = useCallback(() => {\n    const totalAmount = Array.isArray(expenseList) ? expenseList.reduce((sum, item) => sum += item.itemPrice, 0) : 0;\n\n    setCurExpenseList(expenseList);\n    setTotalExpenseAmount(totalAmount);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expenseList]);\n\n  // 조회연월 또는 location 변경 시 조회\n  useEffect(() => {\n    if (location && location.state && location.state.targetMonth) {\n      // 페이지 이동 후 데이터 세팅\n      const tempArr = location.state.targetMonth.split('-');\n      const tempYear = tempArr[0];\n      const tempMonth = tempArr[1];\n\n      setCurYear(tempYear);\n      setCurMonth(tempMonth);\n\n      // 페이지 이동 시 사용하는 파라미터 제거\n      history.replace({ state: undefined });\n    }\n\n    getExpenseList();\n    \n    // if (location && location.state && location.state.targetMonth) {\n    //   // 페이지 이동 후 데이터 세팅\n    //   const tempArr = location.state.targetMonth.split('-');\n    //   const tempYear = tempArr[0];\n    //   const tempMonth = tempArr[1];\n\n    //   // 페이지 이동 시 사용하는 파라미터 제거\n    //   history.replace({ state: undefined });\n      \n    //   if (tempYear !== curYear || tempMonth !== curMonth) {\n        \n    //     setCurYear(tempYear);\n    //     setCurMonth(tempMonth);\n\n    //     getExpenseList();\n    //     // dispatch(readExpenseList({ month: moment().format(`${tempYear}-${tempMonth}`) }));\n    //   } else {\n    //     setExpenseList();\n    //   }\n    // } else {\n    //   setExpenseList();\n    // }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [curMonth, location]);\n\n  // 수입 데이터 조회 후 항목 세팅\n  useEffect(() => {\n    setExpenseList();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [expenseList]);\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"selected-month-box\">\n        <div className=\"vertical-empty-space\" />\n        \n        <div className=\"selected-month-info-box\">\n          <IconButton onClick={() => onClickArrowBtn('prev')}>\n            <ArrowBackIos />\n          </IconButton>\n          \n          <div className=\"selected-month-texts\">\n            <div className=\"title\">\n              {cm.trimMonth(curMonth)}월 사용금액\n            </div>\n            <div className=\"amount\">\n              {cm.addComma(totalExpenseAmount)}원\n            </div>\n          </div>\n          \n          <IconButton id=\"next\" onClick={() => onClickArrowBtn('next')}>\n            <ArrowForwardIos />\n          </IconButton>\n        </div>\n      </div>\n       \n      <ItemList\n        type=\"expense\"\n        curItemList={curExpenseList}\n        showDelBtn={showDelBtn}\n        deleteItem={deleteExpenseList}\n        onEventHandler={onEventHandler}\n      />\n      <FloatingAddBtn movePage={moveToAddExpenseList} />\n    </div>\n  );\n};\n\nexport default ExpenseContainer;","import React from 'react';\nimport {\n  TextField, Button, FormControl, InputLabel, NativeSelect,\n} from '@material-ui/core';\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport \"react-datepicker/src/stylesheets/datepicker.scss\";\nimport ko from 'date-fns/locale/ko';\nregisterLocale('ko', ko);\n\nconst ItemDetail = ({\n  type, item,\n  onChangeItem, onChangeDate,\n  onClickPrevBtn, onClickSubmitBtn,\n}) => (\n  <div className=\"item-container\">\n    <div className=\"item-detail\">\n      {type === 'expense' ? (\n        <>\n          <FormControl fullWidth>\n            <InputLabel variant=\"standard\" htmlFor=\"item-type-native\">\n              구분\n            </InputLabel>\n            <NativeSelect\n              defaultValue=\"mart\"\n              value={item.itemType}\n              inputProps={{\n                name: 'itemType',\n                id: 'item-type-native',\n              }}\n              onChange={onChangeItem}\n            >\n              <option value=\"mart\">마트</option>\n              <option value=\"dineout\">외식</option>\n              <option value=\"leisure\">여가</option>\n              <option value=\"etc\">기타</option>\n            </NativeSelect>\n          </FormControl>\n          <TextField\n            required\n            name=\"itemPrice\"\n            label=\"금액\"\n            value={item.itemPrice}\n            onChange={onChangeItem}\n          />\n          <DatePicker\n            locale=\"ko\"\n            selected={item.date}\n            onChange={onChangeDate}\n            dateFormat=\"yyyy-MM-dd\"\n            customInput={<TextField label=\"일자\" />}\n            popperModifiers={{ \n              preventOverflow: { enabled: true, },\n            }}\n            popperPlacement=\"auto\"\n          />\n          <TextField\n            name=\"remark\"\n            label=\"비고\"\n            value={item.remark}\n            onChange={onChangeItem}\n          />\n        </>\n      ): (\n        <>\n          <TextField\n            required\n            name=\"itemAmount\"\n            label=\"금액\"\n            value={item.itemAmount}\n            onChange={onChangeItem}\n          />\n          <TextField\n            name=\"remark\"\n            label=\"비고\"\n            value={item.remark}\n            onChange={onChangeItem}\n          />\n        </>\n      )}\n    </div>\n    \n    <div className=\"item-btn-area\">\n      <Button\n        variant=\"contained\"\n        onClick={onClickPrevBtn}\n      >\n        돌아가기\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClickSubmitBtn}\n      >\n        저장\n      </Button>\n    </div>\n  </div>\n);\n\nexport default ItemDetail;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { registerNewIncome, updateIncome } from 'modules/incomeInfo';\nimport { registerNewExpense, updateExpense } from 'modules/expenseInfo';\nimport ItemDetail from 'components/ItemDetail';\nimport moment from 'moment';\n\nconst ItemDetailContainer = () => {\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const { state: { type, actionType, targetItem, targetMonth } } = location;\n\n  const [item, setItem] = useState(() => {\n    const tempItem = {\n      remark: '',\n    };\n\n    switch (type) {\n      case 'income':\n        tempItem.itemAmount = 0;\n        break;\n      case 'expense':\n        tempItem.itemPrice = 0;\n        tempItem.date = new Date();\n        tempItem.itemType = 'mart';\n        tempItem.itemTypeName = '마트';\n        break;\n      default:\n        break;\n    }\n\n    return tempItem;\n  });\n\n  // 아이템 유형 mapping 객체\n  const itemTypeMap = new Map([\n    [\"mart\", \"마트\"],\n    [\"dineout\", \"외식\"],\n    [\"leisure\", \"여가\"],\n    [\"etc\", \"기타\"]\n  ]);\n\n  // 항목 변경 이벤트 핸들러\n  const onChangeItem = (e) => {\n    const { target: { name, value } } = e;\n    const tempItem = { ...item };\n    let newValue = value;\n\n    switch (name) {\n      case 'priority':\n      case 'itemPrice':\n      case 'itemAmount':\n        newValue = Number(newValue.replace(/[^0-9]/gi, ''));\n        break;\n      case 'itemType':\n        tempItem.itemTypeName = itemTypeMap.get(value);\n        break;\n      case 'itemName':\n      case 'remark':\n        break;\n      default:\n        break;\n    }\n\n    tempItem[name] = newValue;\n\n    setItem(tempItem);\n  };\n\n  const onChangeDate = date => {\n    const tempItem = { ...item };\n    tempItem.date = date;\n    setItem(tempItem);\n  };\n\n  // 돌아가기 버튼 클릭 이벤트 핸들러\n  const onClickPrevBtn = () => {\n    history.push({\n      pathname: `/${type}`,\n      state: { targetMonth },\n    });\n  };\n\n  // 저장 버튼 클릭 이벤트 핸들러\n  const onClickSubmitBtn = () => {\n    const paramItem = { ...item };\n    const action = mapActions();\n\n    if (type === 'expense') {\n      const { date } = paramItem;\n      paramItem.date = moment(date).format('YYYY-MM-DD');\n    }\n\n    dispatch(action({\n      item: paramItem,\n      curYm: targetMonth,\n    }));\n  };\n\n  // action 유형에 따라 module action mapping\n  const mapActions = () => {\n    let action = '';\n\n    const incomeActionMap = new Map([\n      ['add', registerNewIncome],\n      ['update', updateIncome],\n    ]);\n\n    const expenseActionMap = new Map([\n      ['add', registerNewExpense],\n      ['update', updateExpense],\n    ]);\n\n    switch (type) {\n      case 'income':\n        action = incomeActionMap.get(actionType);\n        break;\n      case 'expense':\n        action = expenseActionMap.get(actionType);\n        break;\n      default:\n        break;\n    }\n\n    return action;\n  };\n\n  // detail page title mapping\n  const mapPageTitle = () => {\n    let ym = '';\n    let typeText = '';\n    let actionText = '';\n\n    const tempYm = targetMonth.split('-');\n    ym = `${tempYm[0]}년 ${Number(tempYm[1])}월`;\n\n    switch (type) {\n      case 'income':\n        typeText = '충전';\n        break;\n      case 'expense':\n        typeText = '사용';\n        break;\n      default:\n        break;\n    }\n\n    switch (actionType) {\n      case 'add':\n        actionText = '추가';\n        break;\n      case 'update':\n        actionText = '수정';\n        break;\n      default:\n        break;\n    }\n\n    return `${ym} ${typeText} ${actionText}`;\n  };\n\n  useEffect(() => {\n    if (targetItem) {\n      targetItem.date = new Date(targetItem.date);\n      setItem(targetItem);\n    }\n  }, [targetItem, targetMonth]);\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"vertical-empty-space\" />\n      <div className=\"page-title\">{mapPageTitle()}</div>\n      <ItemDetail\n        type={type}\n        item={item}\n        onChangeItem={onChangeItem}\n        onChangeDate={onChangeDate}\n        onClickPrevBtn={onClickPrevBtn}\n        onClickSubmitBtn={onClickSubmitBtn}\n      />\n    </div>\n  )\n};\n\nexport default ItemDetailContainer;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nconst ToastMessage = () => {\n\n  const history = useHistory();\n\n  const { isLoggedIn, authMsg, incomeMsg, expenseMsg } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n    authMsg: state.userInfo.authMsg,  // 신규등록 or 로그인 시 에러 메시지\n    incomeMsg: state.incomeInfo.incomeMsg, // 수입 스토어 액션 처리 후 메시지\n    expenseMsg: state.expenseInfo.expenseMsg, // 지출 스토어 액션 처리 후 메시지\n  }));\n\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [alertType, setAlertType] = useState('error');\n\n  const closeAlert = () => setOpenAlert(false);\n\n  useEffect(() => {\n    // 로그인 or 신규가입 과정에서 에러 발생 시 서버 에러 메시지 출력\n    const { msg, isError } = authMsg;\n    if (!isLoggedIn && history.location.pathname === '/' && msg !== '' && isError ) {\n      setAlertMessage(msg);\n      setOpenAlert(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authMsg.msg]);\n  \n  useEffect(() => {\n    // 수입 등록/삭제/수정 처리 후 처리 메시지 출력\n    if (incomeMsg) {\n      const { msg, isError } = incomeMsg;\n      if (isLoggedIn && msg !== '') {\n        setAlertMessage(msg);\n        if (!isError) {\n          setAlertType('success');\n        }\n        setOpenAlert(true);\n      }\n    }\n  }, [incomeMsg, isLoggedIn]);\n\n  useEffect(() => {\n    // 지출 등록/삭제/수정 처리 후 처리 메시지 출력\n    if (expenseMsg) {\n      const { msg, isError } = expenseMsg;\n      if (isLoggedIn && msg !== '') {\n        setAlertMessage(msg);\n        if (!isError) {\n          setAlertType('success');\n        }\n        setOpenAlert(true);\n      }\n    }\n  }, [expenseMsg, isLoggedIn])\n  \n  return (\n    <Snackbar open={openAlert} autoHideDuration={3000} onClose={closeAlert}>\n      <MuiAlert severity={alertType} elevation={6} variant=\"filled\" >\n        {alertMessage}\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n\nexport default ToastMessage;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport NavBar from 'components/NavBar';\nimport HomeContainer from 'containers/HomeContainer';\nimport AuthContainer from 'containers/AuthContainer';\nimport IncomeContainer from \"containers/IncomeContainer\";\nimport ExpenseContainer from \"containers/ExpenseContainer\";\nimport ItemDetailContainer from \"containers/ItemDetailContainer\";\nimport ToastMessage from \"share/ToastMessage\";\n\nconst AppRouter = () => {\n  const { isLoggedIn } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n  }));\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <NavBar />\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <HomeContainer />\n            </Route>\n            <Route exact path=\"/income\">\n              <IncomeContainer />\n            </Route>\n            <Route exact path=\"/expense\">\n              <ExpenseContainer />\n            </Route>\n            <Route exact path=\"/add\">\n              <ItemDetailContainer />\n            </Route>\n            <ToastMessage />\n          </>\n        ) : (\n            <>\n              <Route exact path=\"/\">\n                <AuthContainer />\n                <ToastMessage />\n              </Route>\n              <Redirect to={{ pathname: '/' }} />\n            </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;","import React from 'react';\nimport AppRouter from './router/AppRouter';\nimport './style/style.scss';\n\nfunction App() {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\n\nimport userInfo, { userInfoSaga } from './userInfo';\nimport incomeInfo, { incomeInfoSaga } from './incomeInfo';\nimport expenseInfo, { expenseInfoSaga } from './expenseInfo';\n\nconst rootReducer = combineReducers({\n  userInfo,\n  incomeInfo,\n  expenseInfo\n});\n\nexport function* rootSaga() {\n  yield all([userInfoSaga(), incomeInfoSaga(), expenseInfoSaga()]);\n  \n}\n\nexport default rootReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer, { rootSaga } from './modules';\n\nconst sagaMiddleware = createSagaMiddleware(); // 사가 미들웨어를 만듭니다.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware)\n  )\n);\n\nsagaMiddleware.run(rootSaga); // 루트 사가 실행\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}