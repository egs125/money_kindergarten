{"version":3,"sources":["fBase.js","modules/userInfo.js","components/NavBar.js","containers/HomeContainer.js","components/Auth.js","containers/AuthContainer.js","modules/wishInfo.js","share/FloatingAddBtn.js","share/common.js","components/WishList.js","containers/WishListContainer.js","modules/incomeInfo.js","containers/IncomeContainer.js","containers/ExpenseContainer.js","components/ItemDetail.js","containers/ItemDetailContainer.js","router/AppRouter.js","App.js","modules/moneyInfo.js","modules/index.js","index.js"],"names":["moneyKindergarten","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","dbService","firestore","rsf","ReduxSagaFirebase","registerNewAccountSaga","loginSaga","logoutSaga","userInfoSaga","REGISTER","LOGIN","LOGOUT","SET_USER_LOGIN","SET_USER_LOGOUT","login","obj","type","action","email","password","call","auth","createUserWithEmailAndPassword","user","put","console","log","signInWithEmailAndPassword","signOut","takeEvery","initialState","isLoggedIn","userObj","NavBar","history","useHistory","dispatch","useDispatch","useState","openDrawer","setOpenDrawer","useSelector","state","userInfo","toggleDrawer","onMovePage","page","push","className","IconButton","onClick","Close","Menu","MonetizationOn","List","ListItem","button","Divider","HomeContaier","props","Auth","isOnRegister","toggleRegisterProcess","onChangeValue","onPressKey","handleLogin","onClickRegisterBtn","ChildCare","fontSize","LocalAtm","TextField","name","label","required","value","onChange","onKeyPress","id","Button","variant","color","size","AuthContainer","setIsOnRegister","setEmail","setPassword","openAlert","setOpenAlert","alertMessage","setAlertMessage","onRegister","registerNewAccount","toggleAlert","checkValidation","isValid","e","target","charCode","document","querySelector","focus","Snackbar","open","autoHideDuration","onClose","severity","elevation","registerNewWishSaga","readWishListSaga","deleteWishSaga","updateWishSaga","wishInfoSaga","READ","DELETE","UPDATE","SET_WISH_LIST","SUCCESS","FAIL","registerNewWish","userEmail","item","curYm","a","collection","doc","add","then","result","catch","error","msg","month","get","wishRefs","docs","map","exists","data","wishList","isSucceeded","FloatingAddBtn","movePage","style","trimMonth","substr","addComma","number","toString","replace","Wish","actionHandler","itemName","cm","itemPrice","WishList","curMonth","totalWishAmount","curWishList","Array","isArray","index","WishListContainer","wishInfo","curYear","moment","format","setCurWishList","setTotalWishAmount","useSwipeable","onTap","onSwipedLeft","useEffect","totalAmount","reduce","sum","pathname","actionType","readIncomeSaga","incomeInfoSaga","incomeObj","IncomeContainer","ExpenseContainer","ItemDetail","onChangeItem","onClickPrevBtn","onClickSubmitBtn","priority","remark","ItemDetailContainer","location","useLocation","setItem","mapActions","wishActionMap","Map","mapParamObj","paramObj","typeText","actionText","mapPageTitle","newValue","Number","param","AppRouter","basename","exact","path","HomeContainer","to","App","rootSaga","all","rootReducer","combineReducers","useObj","moneyInfo","incomeInfo","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e52ded71.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport ReduxSagaFirebase from 'redux-saga-firebase'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst moneyKindergarten = firebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const rsf = new ReduxSagaFirebase(moneyKindergarten);\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { rsf } from \"../fBase\";\n\n// Action types\nconst REGISTER = 'userInfo/REGISTER';\nconst LOGIN = 'userInfo/LOGIN';\nconst LOGOUT = 'userInfo/LOGOUT';\nconst SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\nconst SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\n\n// Action creators\nexport const registerNewAccount = obj => ({ type: REGISTER, obj });\nexport const login = obj => ({ type: LOGIN, obj });\nexport const logout = () => ({ type: LOGOUT });\nexport const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\nexport const setUserLogout = () => ({ type: SET_USER_LOGOUT });\n\n// saga\nfunction* registerNewAccountSaga(action) {  \n  try {\n    const { email, password } = action.obj;\n    const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n    yield put({ type: SET_USER_LOGIN, user });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* loginSaga(action) {\n  try {\n    const { email, password } = action.obj;\n    const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n    yield put({ type: SET_USER_LOGIN, user });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(rsf.auth.signOut);\n    yield put({ type: SET_USER_LOGOUT });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* userInfoSaga() {\n  yield takeEvery(REGISTER, registerNewAccountSaga);\n  yield takeEvery(LOGIN, loginSaga);\n  yield takeEvery(LOGOUT, logoutSaga);\n}\n\n// initial states\nconst initialState = {\n  isLoggedIn: false,\n  userObj: {},\n};\n\n// reducers\nexport default function UserInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case LOGIN:\n      return state;\n    case LOGOUT:\n      return state;\n    case SET_USER_LOGIN:\n      return {\n        isLoggedIn: true,\n        userObj: action.user,\n      };\n    case SET_USER_LOGOUT:\n      return {\n        isLoggedIn: false,\n        useObj: {},\n      };\n    default:\n      return state;\n  }\n};","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, List, ListItem, Divider } from '@material-ui/core';\nimport { Menu, Close, MonetizationOn } from '@material-ui/icons';\nimport { logout } from '../modules/userInfo';\n\nconst NavBar = () => {\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  \n  const { isLoggedIn } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n  }));\n\n  const toggleDrawer = () => {\n    setOpenDrawer(!openDrawer);\n  };\n\n  const onMovePage = (page) => {\n    toggleDrawer();\n    history.push(`/${page}`);\n  };\n\n  const onLogout = () => {\n    toggleDrawer();\n    dispatch(logout());\n  }\n\n  return (\n    <>\n      <nav className=\"nav-container\">\n        {isLoggedIn ? (\n          <IconButton onClick={toggleDrawer}>\n          {openDrawer ? (\n            <Close />\n          ) : (\n            <Menu />\n          )}\n        </IconButton>\n        ) : (\n          <IconButton>\n            <MonetizationOn />\n          </IconButton>\n        )}\n        <span className=\"app-title\">재린이 유치원</span>\n      </nav>\n      {openDrawer && (\n        <div className=\"nav-drawer\">\n          <List>\n            <ListItem\n              button\n              onClick={() => onMovePage('')}\n            >\n              <span>요약</span>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => onMovePage('wishList')}\n            >\n              <span>장바구니</span>\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => onMovePage('expense')}\n            >\n              <span>지출</span>\n            </ListItem>\n            <ListItem\n              button\n              className=\"nav-drawer-last-item\"\n              onClick={() => onMovePage('income')}\n            >\n              <span>수입</span>\n            </ListItem>\n            {isLoggedIn && (\n              <>\n                <Divider />\n                <ListItem button onClick={onLogout}><span>로그아웃</span></ListItem>\n              </>\n            )}\n          </List>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst HomeContaier = (props) => {\n  const dispatch = useDispatch();\n  \n  const { isLoggedIn, userObj } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n    userObj: state.userInfo.userObj,\n  }));\n\n  return (\n    <div>\n      Home!\n    </div>\n  );\n};\n\nexport default HomeContaier;\n","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { ChildCare, LocalAtm } from '@material-ui/icons';\n\nconst Auth = ({\n  isOnRegister,\n  email, password,\n  toggleRegisterProcess, onChangeValue,\n  onPressKey, handleLogin, onClickRegisterBtn,\n}) => (\n  <div className=\"auth-container\">\n\n    <div className=\"icon-area\">\n      <ChildCare fontSize=\"large\" />\n      <LocalAtm fontSize=\"large\" />\n      <ChildCare fontSize=\"large\" />\n    </div>\n\n    <div className=\"input-area\">\n      <TextField\n        name=\"email\"\n        type=\"text\"\n        label=\"Email address\"\n        required\n        value={email}\n        onChange={onChangeValue}\n        onKeyPress={onPressKey}\n      />\n      <TextField\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        label=\"password\"\n        required\n        value={password}\n        onChange={onChangeValue}\n        onKeyPress={onPressKey}\n      />\n    </div>\n\n    <div className=\"btn-area\">\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        onClick={isOnRegister ? onClickRegisterBtn : handleLogin}\n      >\n        {isOnRegister ? '신규 등록' : '로그인'}\n      </Button>\n      <div className=\"spacing-area\" />\n      <Button\n        variant=\"contained\"\n        color=\"success\"\n        size=\"large\"\n        onClick={toggleRegisterProcess}\n      >\n        {isOnRegister ? '취소' : '계정 생성'}\n      </Button>\n    </div>\n  </div>\n);\n\nexport default Auth;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { registerNewAccount, login } from 'modules/userInfo';\nimport Auth from '../components/Auth';\n\nconst AuthContainer = () => {\n\n  const dispatch = useDispatch();\n\n  const [isOnRegister, setIsOnRegister] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [openAlert, setOpenAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n\n  const onRegister = obj => dispatch(registerNewAccount(obj));\n  const onLogin = obj => dispatch(login(obj));\n\n  const toggleRegisterProcess = () => setIsOnRegister(!isOnRegister);\n  const toggleAlert = () => setOpenAlert(!openAlert);\n\n  const onChangeValue = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onPressKey = e => {\n    const { charCode, target: { name } } = e;\n    \n    if (charCode === 13) { \n      if (name === 'email') {    \n        const target = document.querySelector('#password');\n        if (target) {\n          target.focus();\n        }\n      } else if (name === 'password') {\n        handleLogin();\n      }\n    } \n  };\n\n  const checkValidation = () => {\n    let isValid = true;\n    if (email === '') {\n      setAlertMessage('이메일 주소를 입력해주세요');\n      toggleAlert();\n      isValid = false;\n    } else if (password === '') {\n      setAlertMessage('비밀번호를 입력해주세요');\n      toggleAlert();\n      isValid = false;\n    }\n\n    return isValid;\n  }\n\n  const handleLogin = () => {\n    const isValid = checkValidation();\n\n    if (isValid) {\n      onLogin({ email, password });\n    }\n  };\n\n  const onClickRegisterBtn = () => {\n    const isValid = checkValidation();\n\n    if (isValid) {\n      onRegister({ email, password });\n    }\n  };\n\n  return (\n    <>\n      <Auth\n        isOnRegister={isOnRegister}\n        email={email}\n        password={password}\n        toggleRegisterProcess={toggleRegisterProcess}\n        onChangeValue={onChangeValue}\n        onPressKey={onPressKey}\n        handleLogin={handleLogin}\n        onClickRegisterBtn={onClickRegisterBtn}\n      />\n      <Snackbar open={openAlert} autoHideDuration={3000} onClose={toggleAlert}>\n        <MuiAlert severity=\"error\" elevation={6} variant=\"filled\" >\n          {alertMessage}\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n\n};\n\nexport default AuthContainer;\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst REGISTER = 'wishInfo/REGISTER';\nconst READ = 'wishInfo/READ';\nconst DELETE = 'wishInfo/DELETE';\nconst UPDATE = 'wishInfo/UPDATE';\nconst SET_WISH_LIST = 'wishList/SET_WISH_LIST';\nconst SUCCESS = 'wishList/SUCCESS';\nconst FAIL = 'wishList/FAIL';\n\n// Action creators\nexport const registerNewWish = obj => ({ type: REGISTER, obj });\nexport const readWishList = obj=> ({ type: READ, ...obj });\nexport const deleteWish = obj => ({ type: DELETE, obj });\nexport const updateWish = obj => ({ type: UPDATE, obj });\n\n// saga\nfunction* registerNewWishSaga(action) {\n  try {\n    const { userEmail, item, curYm } = action.obj;\n\n    const result = yield call(async () => {\n      return dbService.collection('wishlists')\n        .doc(userEmail).collection(curYm).add(item)\n        .then(result => {\n          return result;\n        })\n        .catch(error => {\n          console.log(error);\n          return null;\n        });\n    });\n\n    if (result) {\n      yield put({ type: SUCCESS, msg: '등록했습니다!' })\n    } else {\n\n    }\n\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* readWishListSaga(action) {\n  try {\n    const { userEmail, month } = action;\n\n    const wishList = yield call(async () => {\n      const wishRefs = await dbService.collection('wishlists')\n        .doc(userEmail).collection(month).get();\n      \n      const { docs } = wishRefs;\n\n      if (docs) {\n        return docs.map(doc => {\n          if (doc.exists) {\n            return { id: doc.id, ...doc.data() };\n          }\n        });\n      }\n    });\n\n    yield put({ type: SET_WISH_LIST, wishList });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* deleteWishSaga(action) {\n  try {\n    console.log(action);\n    // const { name, price, date, remark, rank} = action.obj;\n    // const result = yield put();\n    //dbService.doc(`mukkit/${id}`).delete();\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* updateWishSaga(action) {\n  try {\n    console.log(action);\n\n    // dbService.doc(`mukkit/${mukkit.id}`).update({\n    //     isVisited: true,\n    //   }); \n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport function* wishInfoSaga() {\n  yield takeEvery(REGISTER, registerNewWishSaga);\n  yield takeEvery(READ, readWishListSaga);\n  yield takeEvery(DELETE, deleteWishSaga);\n  yield takeEvery(UPDATE, updateWishSaga);\n}\n\n// initial states\nconst initialState = {\n  wishList: [],\n  isSucceeded: false,\n  msg: '',\n};\n\n// reducers\nexport default function wishInfo(state = initialState, action) {\n  switch (action.type) {\n    case REGISTER:\n      return state;\n    case READ:\n      return state;\n    case DELETE:\n      return state;\n    case UPDATE:\n      return state;\n    case SET_WISH_LIST:\n      return {\n        wishList: action.wishList,\n      };\n    case SUCCESS:\n      return {\n        isSucceeded: true,\n        msg: action.msg,\n      };\n    case FAIL:\n      return state;\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nconst FloatingAddBtn = ({ movePage }) => {\n  return (\n    <div className=\"floating-btn\" onClick={movePage}>\n      <AddCircleIcon color=\"primary\" style={{ fontSize: 50 }} />\n    </div>\n  );\n};\n\nexport default FloatingAddBtn;\n","\nexport function trimMonth(month) {\n  let result = '';\n\n  if (month) {\n    result = month.substr(0, 1) === '0' ? month.substr(1, 1) : month;\n  }\n\n  return result;\n};\n\nexport function addComma(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n","import React from 'react';\nimport * as cm from 'share/common';\n\nconst Wish = ({ item, actionHandler }) => {\n  return (\n    <div className=\"wish-item\" {...actionHandler}>\n      {`${item.itemName}, ${cm.addComma(item.itemPrice)}원`}\n    </div>\n  );\n};\n\nconst WishList = ({ curMonth, totalWishAmount, curWishList, actionHandler }) => {\n  \n  return (\n    <>\n      <div className=\"page-title\">\n        {cm.trimMonth(curMonth)}월 장바구니\n      </div>\n      <div className=\"total-amount\">\n        {cm.addComma(totalWishAmount)}원\n      </div>\n      {Array.isArray(curWishList) &&\n        curWishList.map((item, index) => <Wish key={index} item={item} actionHandler={actionHandler} />)\n      }\n    </>\n  );\n};\n\nexport default WishList;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useSwipeable } from 'react-swipeable';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert from '@material-ui/lab/Alert';\nimport { readWishList } from 'modules/wishInfo';\n// import * as cm from 'share/common';\nimport FloatingAddBtn from 'share/FloatingAddBtn';\nimport WishList from 'components/WishList';\n\nconst WishListContainer = () => {\n\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const { userObj, wishList } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n    wishList: state.wishInfo.wishList,\n  }));\n\n  const curYear = moment().format('YYYY');\n  const curMonth = moment().format('MM');\n\n  const [curWishList, setCurWishList] = useState([]);\n  const [totalWishAmount, setTotalWishAmount] = useState(0);\n\n  const moveToAddWishList = () => {\n    history.push({\n      pathname: '/add',\n      state: { type: 'wishList', actionType: 'add' },\n    });\n  };\n  \n  const actionHandler = useSwipeable({\n    onTap: e => console.log(e),\n    onSwipedLeft: e => console.log(e),\n  })\n  \n  useEffect(() => {\n    dispatch(readWishList({ userEmail: userObj.user.email, month: moment().format(`${curYear}-${curMonth}`) }));\n  }, [userObj]);\n\n  useEffect(() => {\n    const totalAmount = Array.isArray(wishList) ? wishList.reduce((sum, item) => sum += item.itemPrice, 0) : 0;\n\n    setCurWishList(wishList);\n    setTotalWishAmount(totalAmount);\n  }, [wishList]);\n\n  return (\n    <div className=\"child-container\">\n      <WishList\n        curMonth={curMonth}\n        totalWishAmount={totalWishAmount}\n        curWishList={curWishList}\n        actionHandler={actionHandler}\n      />\n      <FloatingAddBtn movePage={moveToAddWishList} />\n    </div>\n  );\n};\n\nexport default WishListContainer;","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'income/READ';\n// const REGISTER = 'moneyInfo/REGISTER';\n// const LOGIN = 'userInfo/LOGIN';\n// const LOGOUT = 'userInfo/LOGOUT';\n// const SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\n// const SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\n\n// Action creators\nexport const readIncome = obj => ({ type: READ, obj });\n// export const registerNewAccount = obj => ({ type: REGISTER, obj });\n// export const login = obj => ({ type: LOGIN, obj });\n// export const logout = () => ({ type: LOGOUT });\n// export const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\n// export const setUserLogout = () => ({ type: SET_USER_LOGOUT });\n\n// saga\nfunction* readIncomeSaga(action) {\n  try {\n    console.log(action);\n  } catch (e) {\n    console.log(e);\n  }\n}\n// function* registerNewAccountSaga(action) {  \n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* loginSaga(action) {\n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* logoutSaga() {\n//   try {\n//     yield call(rsf.auth.signOut);\n//     yield put({ type: SET_USER_LOGOUT });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\nexport function* incomeInfoSaga() {\n  yield takeEvery(READ, readIncomeSaga);\n  // yield takeEvery(REGISTER, registerNewAccountSaga);\n  // yield takeEvery(LOGIN, loginSaga);\n  // yield takeEvery(LOGOUT, logoutSaga);\n}\n\n// initial states\nconst initialState = {\n  incomeObj: {},\n};\n\n// reducers\nexport default function incomeInfo(state = initialState, action) {\n  switch (action.type) {\n    case READ:\n      return state;\n    // case REGISTER:\n    //   return state;\n    // case LOGIN:\n    //   return state;\n    // case LOGOUT:\n    //   return state;\n    // case SET_USER_LOGIN:\n    //   return {\n    //     isLoggedIn: true,\n    //     userObj: action.user,\n    //   };\n    // case SET_USER_LOGOUT:\n    //   return {\n    //     isLoggedIn: false,\n    //     useObj: {},\n    //   };\n    default:\n      return state;\n  }\n};","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { readIncome } from '../modules/incomeInfo';\nimport { registerNewAccount, login } from 'modules/userInfo';\n\nconst IncomeContainer = () => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(login());\n  }, []);\n  \n  return (\n    <div>\n      income\n    </div>\n  );\n};\n\nexport default IncomeContainer;","import React from 'react';\n\nconst ExpenseContainer = () => {\n\n  return (\n    <div>Expense</div>\n  );\n};\n\nexport default ExpenseContainer;","import React from 'react';\nimport { TextField, Button } from '@material-ui/core';\n\nconst ItemDetail = ({ item, onChangeItem, onClickPrevBtn, onClickSubmitBtn }) => {\n  return (\n    <div>\n      <div className=\"item-detail\">\n        <TextField\n          required\n          name=\"itemName\"\n          label=\"품목명\"\n          value={item.itemName}\n          onChange={onChangeItem}\n        />\n        <TextField\n          required\n          name=\"itemPrice\"\n          label=\"금액\"\n          value={item.itemPrice}\n          onChange={onChangeItem}\n        />\n        <TextField\n          name=\"priority\"\n          label=\"우선순위\"\n          value={item.priority}\n          onChange={onChangeItem}\n        />\n        <TextField\n          name=\"remark\"\n          label=\"비고\"\n          value={item.remark}\n          onChange={onChangeItem}\n        />       \n      </div>\n      \n      <div className=\"item-btn-area\">\n        <Button\n          variant=\"contained\"\n          onClick={onClickPrevBtn}\n        >\n          돌아가기\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClickSubmitBtn}\n        >\n          저장\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemDetail;\n","import React, { useState } from 'react';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { registerNewWish } from 'modules/wishInfo';\nimport ItemDetail from 'components/ItemDetail';\nimport { SwitchVideo } from '@material-ui/icons';\n\nconst ItemDetailContainer = () => {\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const { state: { type, actionType } } = location;\n\n  const { userObj } = useSelector(state => ({\n    userObj: state.userInfo.userObj,\n  }));\n\n  const [item, setItem] = useState({\n    priority: '',\n    itemName: '',\n    itemPrice: 0,\n    remark: '',\n  });\n\n  const curYm = moment().format('YYYY-MM');\n\n  // 항목 변경 이벤트 핸들러\n  const onChangeItem = (e) => {\n    const { target: { name, value } } = e;\n    let newValue = value;\n\n    switch (name) {\n      case 'priority':\n      case 'itemPrice':\n        newValue = Number(newValue.replace(/[^0-9]/gi, ''));\n        break;\n      case 'itemName':\n      case 'remark':\n        break;\n      default:\n        break;\n    }\n\n    setItem({\n      ...item,\n      [name]: newValue,\n    });\n  };\n\n  // 돌아가기 버튼 클릭 이벤트 핸들러\n  const onClickPrevBtn = () => {\n    history.push(`/${type}`);\n  };\n\n  // 저장 버튼 클릭 이벤트 핸들러\n  const onClickSubmitBtn = () => {\n    const action = mapActions();\n    const param = mapParamObj();\n    dispatch(action(param));\n  };\n\n  // action 유형에 따라 module action mapping\n  const mapActions = () => {\n    let action = '';\n\n    const wishActionMap = new Map([\n      ['add', registerNewWish],\n    ]);\n\n    switch (type) {\n      case 'wishList':\n        action = wishActionMap.get(actionType);\n        break;\n      default:\n        break;\n    }\n\n    return action;\n  };\n\n  // action 유형에 따라 parameter mapping\n  const mapParamObj = () => {\n    let paramObj = {};\n\n    switch (type) {\n      case 'wishList':\n        if (actionType === 'add') {\n          paramObj = {\n            userEmail: userObj.user.email,\n            item,\n            curYm,\n          };\n        }\n        break;\n      default:\n        break;\n    }\n\n    return paramObj;\n  };\n\n  // detail page title mapping\n  const mapPageTitle = () => {\n    let typeText = '';\n    let actionText = '';\n\n    switch (type) {\n      case 'wishList':\n        typeText = '장바구니';\n        break;\n      default:\n        break;\n    }\n\n    switch (actionType) {\n      case 'add':\n        actionText = '추가';\n        break;\n      default:\n        break;\n    }\n\n    return `${typeText} ${actionText}`;\n  };\n\n  return (\n    <div className=\"child-container\">\n      <div className=\"page-title\">{mapPageTitle()}</div>\n      <ItemDetail\n        item={item}\n        onChangeItem={onChangeItem}\n        onClickPrevBtn={onClickPrevBtn}\n        onClickSubmitBtn={onClickSubmitBtn}\n      />\n    </div>\n  )\n};\n\nexport default ItemDetailContainer;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport NavBar from '../components/NavBar';\nimport HomeContainer from '../containers/HomeContainer';\nimport AuthContainer from '../containers/AuthContainer';\nimport WishListContainer from \"../containers/WishListContainer\";\nimport IncomeContainer from \"containers/IncomeContainer\";\nimport ExpenseContainer from \"containers/ExpenseContainer\";\nimport ItemDetailContainer from \"containers/ItemDetailContainer\";\n\nconst AppRouter = () => {\n  const { isLoggedIn } = useSelector(state => ({\n    isLoggedIn: state.userInfo.isLoggedIn,\n  }));\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <NavBar />\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <HomeContainer />\n            </Route>\n            <Route exact path=\"/wishList\">\n              <WishListContainer />\n            </Route>\n            <Route exact path=\"/income\">\n              <IncomeContainer />\n            </Route>\n            <Route exact path=\"/expense\">\n              <ExpenseContainer />\n            </Route>\n            <Route exact path=\"/add\">\n              <ItemDetailContainer />\n            </Route>\n          </>\n        ) : (\n            <>\n              <Route exact path=\"/\">\n                <AuthContainer />\n              </Route>\n              <Redirect to={{ pathname: '/' }} />\n            </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;","import React from 'react';\nimport AppRouter from './router/AppRouter';\nimport './style/style.scss';\n\nfunction App() {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { dbService } from \"fBase\";\n\n// Action types\nconst READ = 'moneyInfo/READ';\n// const REGISTER = 'moneyInfo/REGISTER';\n// const LOGIN = 'userInfo/LOGIN';\n// const LOGOUT = 'userInfo/LOGOUT';\n// const SET_USER_LOGIN = 'userInfo/SET_USER_LOGIN';\n// const SET_USER_LOGOUT = 'userInfo/SET_USER_LOGOUT';\n\n// Action creators\nexport const readMoneyInfo = obj => ({ type: READ, obj });\n// export const registerNewAccount = obj => ({ type: REGISTER, obj });\n// export const login = obj => ({ type: LOGIN, obj });\n// export const logout = () => ({ type: LOGOUT });\n// export const setUserLogin = user => ({ type: SET_USER_LOGIN, user });\n// export const setUserLogout = () => ({ type: SET_USER_LOGOUT });\n\n// saga\n// function* registerNewAccountSaga(action) {  \n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* loginSaga(action) {\n//   try {\n//     const { email, password } = action.obj;\n//     const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n//     yield put({ type: SET_USER_LOGIN, user });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\n// function* logoutSaga() {\n//   try {\n//     yield call(rsf.auth.signOut);\n//     yield put({ type: SET_USER_LOGOUT });\n//   } catch (e) {\n//     console.log(e);\n//   }\n// }\n\nexport function* userInfoSaga() {\n  // yield takeEvery(REGISTER, registerNewAccountSaga);\n  // yield takeEvery(LOGIN, loginSaga);\n  // yield takeEvery(LOGOUT, logoutSaga);\n}\n\n// initial states\nconst initialState = {\n  isLoggedIn: false,\n  userObj: {},\n};\n\n// reducers\nexport default function UserInfo(state = initialState, action) {\n  switch (action.type) {\n    // case REGISTER:\n    //   return state;\n    // case LOGIN:\n    //   return state;\n    // case LOGOUT:\n    //   return state;\n    // case SET_USER_LOGIN:\n    //   return {\n    //     isLoggedIn: true,\n    //     userObj: action.user,\n    //   };\n    // case SET_USER_LOGOUT:\n    //   return {\n    //     isLoggedIn: false,\n    //     useObj: {},\n    //   };\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\n\nimport userInfo, { userInfoSaga } from './userInfo';\nimport moneyInfo from './moneyInfo';\nimport wishInfo, { wishInfoSaga } from './wishInfo';\nimport incomeInfo, { incomeInfoSaga } from './incomeInfo';\n\nconst rootReducer = combineReducers({\n  userInfo,\n  moneyInfo,\n  wishInfo,\n  incomeInfo\n});\n\nexport function* rootSaga() {\n  yield all([userInfoSaga(), wishInfoSaga(), incomeInfoSaga()]);\n  \n}\n\nexport default rootReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer, { rootSaga } from './modules';\n\nconst sagaMiddleware = createSagaMiddleware(); // 사가 미들웨어를 만듭니다.\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware)\n  )\n);\n\nsagaMiddleware.run(rootSaga); // 루트 사가 실행\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}